<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>MM</title><link href="http://michaelmartinez.in/" rel="alternate"></link><link href="http://michaelmartinez.in/feeds/all.atom.xml" rel="self"></link><id>http://michaelmartinez.in/</id><updated>2013-04-20T00:00:00-07:00</updated><entry><title>Playing with Tweepy</title><link href="http://michaelmartinez.in/playing-with-tweepy.html" rel="alternate"></link><updated>2013-04-20T00:00:00-07:00</updated><author><name>Michael Martinez</name></author><id>tag:michaelmartinez.in,2013-04-20:playing-with-tweepy.html</id><summary type="html">&lt;p&gt;Tweepy in iPython Notebook. I've wanted to have a play with the Twitter API
for a few months. There is a lot of complexity in this API, so I looked for
a library that abstracted as much as possible. Tweepy was the first to grab
my attention.&lt;/p&gt;
&lt;p&gt;Another library that I plan on trying is &lt;a href="http://mike.verdone.ca/twitter/"&gt;Python Twitter Tools&lt;/a&gt;.
In hindsight, I probably should have gone with PTT to start as Tweepy returns
inconsistent data when accessing various API endpoints. Not to say Tweepy is bad,
because it worked well for these basic examples.&lt;/p&gt;
&lt;p&gt;&lt;a class="btn btn-large" href="/static/ipynb/Tweepy.ipynb"&gt;&lt;i class="icon-download-alt"&gt;&lt;/i&gt; Download this Notebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is to set-up tweepy and oauth to play with the Twitter API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;google group is &lt;a href="https://groups.google.com/forum/?fromgroups=#!forum/tweepy"&gt;here:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docs &lt;a href="http://packages.python.org/tweepy/html/index.html"&gt;here:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;github repo &lt;a href="https://github.com/tweepy/tweepy"&gt;here:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In[1]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;

 # &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;consumer&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;Details&lt;/span&gt;
 # &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;located&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apps&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;under&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;OAuth&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;
 &lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;

 # &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;access&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;applications&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;Details&lt;/span&gt;
 # &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;located&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apps&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;located&lt;/span&gt;
 # &lt;span class="n"&gt;under&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;access&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;
 &lt;span class="n"&gt;access_token_secret&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&amp;quot;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt; &lt;span class="n"&gt;ssecret&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;quot;

 &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OAuthHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_access_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;access_token_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;myapi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 # &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;successful&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt;
 # &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;
 &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

 &lt;span class="n"&gt;Michael&lt;/span&gt; &lt;span class="n"&gt;Martinez&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the request was successful, you will see your name print out in the response&lt;/p&gt;
&lt;p&gt;In[2]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Rocking #iPythonNotebook and tweepy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out[2]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; 0&lt;span class="n"&gt;x107ca3550&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;## The user object ##&lt;/p&gt;
&lt;p&gt;Showing a method to access some variables returned by twitter&lt;/p&gt;
&lt;p&gt;In[3]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;screen_name&lt;/span&gt;

 &lt;span class="n"&gt;MonkMartinez&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[4]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;

 &lt;span class="n"&gt;Father&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Firefighter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Mobile&lt;/span&gt; &lt;span class="n"&gt;Crafter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Web&lt;/span&gt; &lt;span class="n"&gt;Crafter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Garage&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Business&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Dude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[5]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;me&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[6]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;followers_count&lt;/span&gt;

 116
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[7]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out[7]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Rocking&lt;/span&gt; #&lt;span class="n"&gt;iPythonNotebook&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[8]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;statuses_count&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out[8]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; 1570
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[9]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;IPython&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
 &lt;span class="n"&gt;mepic&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;me&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;profile_image_url&lt;/span&gt;
 &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mepic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out[9]:&lt;/p&gt;
&lt;p&gt;&lt;img alt="my mascot" src="static/images/myMascot_normal.png" /&gt;&lt;/p&gt;
&lt;p&gt;### Rate limits ###&lt;/p&gt;
&lt;p&gt;For items that return a dict, you can simply iterate through the list&lt;/p&gt;
&lt;p&gt;In[10]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate_limit_status&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

 #&lt;span class="n"&gt;lets&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="n"&gt;through&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;returned&lt;/span&gt; &lt;span class="n"&gt;dict&lt;/span&gt;

 &lt;span class="n"&gt;rl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate_limit_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iteritems&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
     &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%s : %s&amp;#39;&lt;/span&gt; &lt;span class="c"&gt;%(k, v)&lt;/span&gt;

 &lt;span class="n"&gt;photos&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;daily_limit&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 100&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;reset_time&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Sun&lt;/span&gt; &lt;span class="n"&gt;Apr&lt;/span&gt; 21 17&lt;span class="p"&gt;:&lt;/span&gt;21&lt;span class="p"&gt;:&lt;/span&gt;43 &lt;span class="o"&gt;+&lt;/span&gt;0000
 2013&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;remaining_hits&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 100&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;reset_time_in_seconds&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 1366564903&lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;remaining_hits&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; 346
 &lt;span class="n"&gt;reset_time_in_seconds&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; 1366482078
 &lt;span class="n"&gt;hourly_limit&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; 350
 &lt;span class="n"&gt;reset_time&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Sat&lt;/span&gt; &lt;span class="n"&gt;Apr&lt;/span&gt; 20 18&lt;span class="p"&gt;:&lt;/span&gt;21&lt;span class="p"&gt;:&lt;/span&gt;18 &lt;span class="o"&gt;+&lt;/span&gt;0000 2013
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another way to access variables within the api...&lt;/p&gt;
&lt;p&gt;In[11]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate_limit_status&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;remaining_hits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out[11]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; 350
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[12]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
 # &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;reset&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;twitter&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;
 &lt;span class="n"&gt;twitime&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rate_limit_status&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;reset_time_in_seconds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

 #&lt;span class="n"&gt;convert&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;
 &lt;span class="n"&gt;timere&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;twitime&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Twitter will reset at:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timere&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Twitter will reset at:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;2013-04-20 11:21:18&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[13]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="s-Atom"&gt;:::python&lt;/span&gt;
 &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;i&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user_timeline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;
     &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="nv"&gt;Rocking&lt;/span&gt; &lt;span class="s-Atom"&gt;#iPythonNotebook&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="s-Atom"&gt;tweepy&lt;/span&gt;
 &lt;span class="nv"&gt;Have&lt;/span&gt; &lt;span class="s-Atom"&gt;you&lt;/span&gt; &lt;span class="s-Atom"&gt;heard&lt;/span&gt; &lt;span class="s-Atom"&gt;‘&lt;/span&gt;&lt;span class="nv"&gt;Sisi&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;Stay&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;Funk&lt;/span&gt; &lt;span class="nv"&gt;Ferret&lt;/span&gt; &lt;span class="nv"&gt;Edit&lt;/span&gt;&lt;span class="s-Atom"&gt;’&lt;/span&gt; &lt;span class="s-Atom"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;FunkFerret&lt;/span&gt; &lt;span class="s-Atom"&gt;on&lt;/span&gt;
 &lt;span class="s-Atom"&gt;#&lt;/span&gt;&lt;span class="nv"&gt;SoundCloud&lt;/span&gt;&lt;span class="s-Atom"&gt;?&lt;/span&gt; &lt;span class="nn"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s-Atom"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s-Atom"&gt;lrdhjdOmDa&lt;/span&gt;
 &lt;span class="nv"&gt;Have&lt;/span&gt; &lt;span class="s-Atom"&gt;you&lt;/span&gt; &lt;span class="s-Atom"&gt;heard&lt;/span&gt; &lt;span class="s-Atom"&gt;‘&lt;/span&gt;&lt;span class="nv"&gt;Rufus&lt;/span&gt; &lt;span class="nv"&gt;Thomas&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;Itch&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;amp;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;Scratch&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;Funk&lt;/span&gt; &lt;span class="nv"&gt;Ferret&lt;/span&gt; &lt;span class="nv"&gt;Edit&lt;/span&gt;&lt;span class="s-Atom"&gt;’&lt;/span&gt; &lt;span class="s-Atom"&gt;by&lt;/span&gt;
 &lt;span class="nv"&gt;FunkFerret&lt;/span&gt; &lt;span class="s-Atom"&gt;on&lt;/span&gt; &lt;span class="s-Atom"&gt;#&lt;/span&gt;&lt;span class="nv"&gt;SoundCloud&lt;/span&gt;&lt;span class="s-Atom"&gt;?&lt;/span&gt; &lt;span class="nn"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="s-Atom"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="s-Atom"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;JW2sKvlvvV&lt;/span&gt;
 &lt;span class="nv"&gt;Can&lt;/span&gt; &lt;span class="s-Atom"&gt;you&lt;/span&gt; &lt;span class="s-Atom"&gt;get&lt;/span&gt; &lt;span class="s-Atom"&gt;paid&lt;/span&gt; &lt;span class="s-Atom"&gt;to&lt;/span&gt; &lt;span class="s-Atom"&gt;evaluate&lt;/span&gt; &lt;span class="nv"&gt;OSS&lt;/span&gt; &lt;span class="s-Atom"&gt;python&lt;/span&gt; &lt;span class="s-Atom"&gt;packages?&lt;/span&gt;
 &lt;span class="nv"&gt;Rocking&lt;/span&gt; &lt;span class="s-Atom"&gt;#iPythonNotebook&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="s-Atom"&gt;tweepy&lt;/span&gt;
 &lt;span class="s-Atom"&gt;@&lt;/span&gt;&lt;span class="nv"&gt;UnlearningEcon&lt;/span&gt; &lt;span class="nv"&gt;Outcomes&lt;/span&gt; &lt;span class="s-Atom"&gt;are&lt;/span&gt; &lt;span class="nv"&gt;NEVER&lt;/span&gt; &lt;span class="s-Atom"&gt;certain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;More&lt;/span&gt; &lt;span class="s-Atom"&gt;thinking&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="s-Atom"&gt;less&lt;/span&gt; &lt;span class="s-Atom"&gt;emotion&lt;/span&gt;
 &lt;span class="s-Atom"&gt;would&lt;/span&gt; &lt;span class="s-Atom"&gt;make&lt;/span&gt; &lt;span class="s-Atom"&gt;the&lt;/span&gt; &lt;span class="s-Atom"&gt;world&lt;/span&gt; &lt;span class="s-Atom"&gt;a&lt;/span&gt; &lt;span class="s-Atom"&gt;better&lt;/span&gt; &lt;span class="s-Atom"&gt;place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
 &lt;span class="s-Atom"&gt;@kennethlove&lt;/span&gt; &lt;span class="nv"&gt;Right&lt;/span&gt; &lt;span class="s-Atom"&gt;on&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;can&amp;#39;t wait!!!&lt;/span&gt;
&lt;span class="s-Atom"&gt; @kennethlove Really AWESOME #GSWD tut(s)... Muchas Gracias! More coming soon&lt;/span&gt;
&lt;span class="s-Atom"&gt; I hope?&lt;/span&gt;
&lt;span class="s-Atom"&gt; I am working on data analysis with #pandas and #iPython for a GIS project&lt;/span&gt;
&lt;span class="s-Atom"&gt; that may help #firefighters be more efficient.&lt;/span&gt;
&lt;span class="s-Atom"&gt; Back on the horse after a one month non-programming hiatus. Feels good...&lt;/span&gt;
&lt;span class="s-Atom"&gt; and my fingers still remember #emacs. #python #iPython&lt;/span&gt;
&lt;span class="s-Atom"&gt; The damage has already been done. The #bankrun will proceed as if the tax&lt;/span&gt;
&lt;span class="s-Atom"&gt; levy had passed. #Cyprus&lt;/span&gt;
&lt;span class="s-Atom"&gt; @charlesfrith short on math eh???&lt;/span&gt;
&lt;span class="s-Atom"&gt; Enough politics, back to programming and awesomeness in general.&lt;/span&gt;
&lt;span class="s-Atom"&gt; #hispanics are not dumb people that simply recognize latino names and think,&lt;/span&gt;
&lt;span class="s-Atom"&gt; &amp;quot;bueno, yo vota para el.&amp;quot;&lt;/span&gt;
&lt;span class="s-Atom"&gt; Not only that, the #republican party thinks that trotting people with&lt;/span&gt;
&lt;span class="s-Atom"&gt; hispanic last names will to help &amp;quot;win&amp;quot; the hispanic vote. #notworking&lt;/span&gt;
&lt;span class="s-Atom"&gt; The #republican party is so out of touch with my generation I really don&amp;#39;t&lt;/span&gt;
 &lt;span class="s-Atom"&gt;know&lt;/span&gt; &lt;span class="s-Atom"&gt;where&lt;/span&gt; &lt;span class="s-Atom"&gt;to&lt;/span&gt; &lt;span class="s-Atom"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
 &lt;span class="s-Atom"&gt;@cjno&lt;/span&gt; &lt;span class="s-Atom"&gt;pic&lt;/span&gt; &lt;span class="s-Atom"&gt;or&lt;/span&gt; &lt;span class="s-Atom"&gt;it&lt;/span&gt; &lt;span class="s-Atom"&gt;didn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s-Atom"&gt;t&lt;/span&gt; &lt;span class="nf"&gt;happen&lt;/span&gt; &lt;span class="o"&gt;:-&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[14]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&amp;quot;#&lt;span class="n"&gt;watertown&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;, i.from_user,&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;:: twit:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;geo:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;

 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Sirajulrox98&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Jessewelle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ish&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;getting&lt;/span&gt; &lt;span class="nb"&gt;real&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Boston&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Be&lt;/span&gt; &lt;span class="n"&gt;safe&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Stay&lt;/span&gt;
 &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;house&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ConradddJay&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;YourAnonNews&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Bomber&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;uncle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;losers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Not&lt;/span&gt;
 &lt;span class="n"&gt;Chechnya&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Not&lt;/span&gt; &lt;span class="n"&gt;Islam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;They&lt;/span&gt; &lt;span class="n"&gt;deserve&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;die&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;SH1yhnBUFQ&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;
 #&lt;span class="n"&gt;BostonBombing&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Jesicakhua&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;goes&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;law&lt;/span&gt; &lt;span class="n"&gt;enforcement&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;US&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt;
 &lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;countries&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;military&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; #&lt;span class="n"&gt;watertown&lt;/span&gt; #&lt;span class="n"&gt;boston&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SaraGCeli&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mackissler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Little&lt;/span&gt; &lt;span class="n"&gt;boy&lt;/span&gt; &lt;span class="n"&gt;goes&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;police&lt;/span&gt; &lt;span class="n"&gt;officers&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;says&lt;/span&gt;
 &amp;quot;&lt;span class="n"&gt;thank&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt;!&amp;quot; &lt;span class="n"&gt;Near&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;suspect&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;caught&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;xoGlNqx2Lt&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Gina_Gillespie&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AJELive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dead&lt;/span&gt; #&lt;span class="n"&gt;Boston&lt;/span&gt; &lt;span class="n"&gt;bombings&lt;/span&gt; &lt;span class="n"&gt;suspect&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;interviewed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;FBI&lt;/span&gt;
 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hLSqKYKZUz&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bumpinuglies55&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;MentalityMag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt; &lt;span class="n"&gt;Police&lt;/span&gt; &lt;span class="n"&gt;Chief&lt;/span&gt; &lt;span class="n"&gt;claims&lt;/span&gt; &lt;span class="n"&gt;Tamerlan&lt;/span&gt; &lt;span class="n"&gt;Tsarnaev&lt;/span&gt;
 &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;cuffed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;alive&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;ground&lt;/span&gt; &lt;span class="n"&gt;when&lt;/span&gt; &lt;span class="n"&gt;Dzhokhar&lt;/span&gt; &lt;span class="n"&gt;ran&lt;/span&gt; &lt;span class="n"&gt;him&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;stolen&lt;/span&gt; &lt;span class="n"&gt;SUV&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="n"&gt;killing&lt;/span&gt; &lt;span class="n"&gt;him&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;watertowntab&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;ThatGuyBoston&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; #&lt;span class="n"&gt;watertown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;boston&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
 &lt;span class="n"&gt;United&lt;/span&gt; &lt;span class="n"&gt;States&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;America&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Proud&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Boston&lt;/span&gt; &lt;span class="n"&gt;Firefighters&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DMillsTheGod&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AJELive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dead&lt;/span&gt; #&lt;span class="n"&gt;Boston&lt;/span&gt; &lt;span class="n"&gt;bombings&lt;/span&gt; &lt;span class="n"&gt;suspect&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;interviewed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;FBI&lt;/span&gt;
 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hLSqKYKZUz&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;watertowntab&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;GarrettQuinn&lt;/span&gt; &lt;span class="n"&gt;resident&lt;/span&gt; &lt;span class="n"&gt;Taryn&lt;/span&gt; &lt;span class="n"&gt;Sullivan&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 28&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;says&lt;/span&gt; &lt;span class="n"&gt;she&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;nervous&lt;/span&gt;
 &lt;span class="n"&gt;but&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;faith&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="n"&gt;Police&lt;/span&gt;&amp;quot; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;39&lt;span class="n"&gt;Lf9HB32t&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infolibri&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AJELive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dead&lt;/span&gt; #&lt;span class="n"&gt;Boston&lt;/span&gt; &lt;span class="n"&gt;bombings&lt;/span&gt; &lt;span class="n"&gt;suspect&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;interviewed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;FBI&lt;/span&gt;
 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hLSqKYKZUz&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fabian70813&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;YourAnonNews&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Cop&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;NBC&lt;/span&gt; &lt;span class="n"&gt;reporter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&amp;quot;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;knew&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;going&lt;/span&gt;
 &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;wouldn&lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;standing&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&amp;quot;#&lt;span class="n"&gt;watertown&lt;/span&gt; #&lt;span class="n"&gt;manhunt&lt;/span&gt; #&lt;span class="n"&gt;Boston&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;CiaPressOffice&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PatrakaarPopat&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AJELive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dead&lt;/span&gt; #&lt;span class="n"&gt;Boston&lt;/span&gt; &lt;span class="n"&gt;bombings&lt;/span&gt; &lt;span class="n"&gt;suspect&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;interviewed&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;FBI&lt;/span&gt;
 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;hLSqKYKZUz&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HaaziqUvais&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;lisawilliams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Police&lt;/span&gt; &lt;span class="n"&gt;searched&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;house&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;away&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Attic&lt;/span&gt;
 &lt;span class="n"&gt;door&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;complaints&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;doing&lt;/span&gt; &lt;span class="n"&gt;their&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; #&lt;span class="n"&gt;watertown&lt;/span&gt;
 &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;A4lw0ZBxoJ&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
 &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Slainte2505&lt;/span&gt;
 &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;twit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;RT&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;OpocAnOn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; #&lt;span class="n"&gt;Dzhokhar&lt;/span&gt; #&lt;span class="n"&gt;Tsarnaev&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;wider&lt;/span&gt; &lt;span class="n"&gt;picture&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt;
 &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="n"&gt;bombing&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; #&lt;span class="n"&gt;bostonbombing&lt;/span&gt; #&lt;span class="n"&gt;manhunt&lt;/span&gt; #&lt;span class="n"&gt;Watertown&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;LXWlVR9RkQ&lt;/span&gt;
 &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[15]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lists_subscriptions&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
     &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="nb"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

 &lt;span class="n"&gt;pythonistas&lt;/span&gt;
 &lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;Rails&lt;/span&gt;
 &lt;span class="n"&gt;rails&lt;/span&gt; &lt;span class="n"&gt;guys&lt;/span&gt;
 &lt;span class="n"&gt;Rails&lt;/span&gt;
 &lt;span class="n"&gt;tech&lt;/span&gt; &lt;span class="n"&gt;pundits&lt;/span&gt;
 &lt;span class="n"&gt;peoplewhomakestuff&lt;/span&gt;
 &lt;span class="n"&gt;Microsoft&lt;/span&gt;
 &lt;span class="n"&gt;MSExpSLTeam&lt;/span&gt;
 &lt;span class="n"&gt;Rad&lt;/span&gt; &lt;span class="n"&gt;Designers&lt;/span&gt;
 &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Pixel&lt;/span&gt; &lt;span class="n"&gt;Horde&lt;/span&gt;
 &lt;span class="n"&gt;Designer&lt;/span&gt;
 &lt;span class="n"&gt;Cool&lt;/span&gt; &lt;span class="n"&gt;Infographics&lt;/span&gt; &lt;span class="n"&gt;People&lt;/span&gt;
 &lt;span class="n"&gt;visual&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;effects&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;peeps&lt;/span&gt;
 &lt;span class="n"&gt;Design&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Animation&lt;/span&gt;
 &lt;span class="n"&gt;design&lt;/span&gt;
 &lt;span class="n"&gt;design&lt;/span&gt;
 &lt;span class="n"&gt;Design&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arts&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt;
 &lt;span class="n"&gt;Graphics&lt;/span&gt; &lt;span class="n"&gt;Software&lt;/span&gt;
 &lt;span class="n"&gt;UX&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;IxD&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[16]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Someone looking for a part-time #pythondev?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Out[16]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; 0&lt;span class="n"&gt;x108228d10&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[19]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt; &lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
 &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
 &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;

 &lt;span class="n"&gt;tweet_length&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_timeline&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;50&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;tweet_length&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

 # &lt;span class="n"&gt;Convert&lt;/span&gt; &lt;span class="n"&gt;tweet_length&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;
 &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet_length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 #&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;
 &lt;span class="n"&gt;vf&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 #&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;
 &lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;gd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 #&lt;span class="n"&gt;Horizontal&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
 &lt;span class="n"&gt;axhline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;92&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Number of Tweets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Number of Characters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Mean length of last 50 tweets: %f characters&amp;#39;&lt;/span&gt; &lt;span class="c"&gt;%vf)&lt;/span&gt;

 &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="plot" src="/static/images/tweepy-ipynb.png" /&gt;&lt;/p&gt;</summary></entry><entry><title>NFLgame - Python for American Football</title><link href="http://michaelmartinez.in/nflgame-python-for-american-football.html" rel="alternate"></link><updated>2013-03-17T00:00:00-07:00</updated><author><name>Michael Martinez</name></author><id>tag:michaelmartinez.in,2013-03-17:nflgame-python-for-american-football.html</id><summary type="html">&lt;p&gt;NFLgame is a Python package that allows programmatic access to NFL data.
It is a super fun way to get stats about your favorite NFL player or team.
My plan is more sinister as I attempt to leverage this in my quest to win a
fantasy football league.&lt;/p&gt;
&lt;p&gt;The Github repo is located &lt;a href="https://github.com/BurntSushi/nflgame"&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="btn btn-large" href="/static/ipynb/NFL.ipynb"&gt;&lt;i class="icon-download-alt"&gt;&lt;/i&gt; Download this Notebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In[1]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;nflgame&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Lets have a look at some basic stats for the last 3 games of the NFL Regular season&lt;/h3&gt;
&lt;p&gt;First we'll have a look at the top 25 rushers for weeks 15, 16, 17. Awesome that we get
summary stats right out of the box, right?&lt;/p&gt;
&lt;p&gt;In[15]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rushing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rushing_yds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rushing_yds&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Peterson&lt;/span&gt; &lt;span class="mi"&gt;497&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Morris&lt;/span&gt; &lt;span class="mi"&gt;378&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lynch&lt;/span&gt; &lt;span class="mi"&gt;324&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Williams&lt;/span&gt; &lt;span class="mi"&gt;322&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spiller&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Charles&lt;/span&gt; &lt;span class="mi"&gt;289&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Foster&lt;/span&gt; &lt;span class="mi"&gt;276&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Forte&lt;/span&gt; &lt;span class="mi"&gt;260&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ballard&lt;/span&gt; &lt;span class="mi"&gt;252&lt;/span&gt;
&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Moreno&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pierce&lt;/span&gt; &lt;span class="mi"&gt;232&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Martin&lt;/span&gt; &lt;span class="mi"&gt;220&lt;/span&gt;
&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Jackson&lt;/span&gt; &lt;span class="mi"&gt;206&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Johnson&lt;/span&gt; &lt;span class="mi"&gt;206&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;McFadden&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Murray&lt;/span&gt; &lt;span class="mi"&gt;197&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bush&lt;/span&gt; &lt;span class="mi"&gt;195&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ingram&lt;/span&gt; &lt;span class="mi"&gt;182&lt;/span&gt;
&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ridley&lt;/span&gt; &lt;span class="mi"&gt;181&lt;/span&gt;
&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Greene&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wilson&lt;/span&gt; &lt;span class="mi"&gt;179&lt;/span&gt;
&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Gore&lt;/span&gt; &lt;span class="mi"&gt;179&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Leshoure&lt;/span&gt; &lt;span class="mi"&gt;158&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rice&lt;/span&gt; &lt;span class="mi"&gt;150&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wilson&lt;/span&gt; &lt;span class="mi"&gt;147&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we'll look at the top 25 running backs and the total amount of touchdowns
for weeks 15, 16, 17 using the players variable we created above.&lt;/p&gt;
&lt;p&gt;In[16]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;touchdowns&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rushing_tds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rushing_tds&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Morris&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tolbert&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wilson&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wells&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Forte&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Grant&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turner&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ingram&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Peterson&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Richardson&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Moreno&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Hester&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Leshoure&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Williams&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lynch&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ridley&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Woodhead&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Johnson&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Greene&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Lewis&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dalton&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Green&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Ellis&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rodgers&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Harris&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wilson&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fumbles are bad in fantasy football, umkay. Lets see the top 25 fumblers for the
same weeks...&lt;/p&gt;
&lt;p&gt;In[17]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fumbles&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fumbles_tot&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fumbles_tot&lt;/span&gt;

&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Rivers&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Kaepernick&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tannehill&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sanchez&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Foles&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Dalton&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cutler&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Colston&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Freeman&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Amendola&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ponder&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Henne&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Holliday&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Stafford&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fitzpatrick&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Murray&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Brown&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Moore&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;McKnight&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Yates&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Harbor&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Maclin&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thornton&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Green&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Forte&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;Now lets have a go with a basic 'player on player' comparison and see if we can dig up any help from the past&lt;/h3&gt;
&lt;p&gt;In my first week of the 2012 Fantasy Football season I had the RB match up
between Marshawn Lynch and Frank Gore. My team started M. "Beast Mode" Lynch and
I came up a bit short... could the outcome have been different with some
analysis? I had other RB's on the bench.&lt;/p&gt;
&lt;p&gt;M. Lynch, player ID: 00-0025399&lt;/p&gt;
&lt;p&gt;F. Gore, player ID: 00-0023500&lt;/p&gt;
&lt;p&gt;The player can be looked up by name or player ID. Iterate through the list of
player in &lt;code&gt;for&lt;/code&gt; loop and &lt;code&gt;print p.playerid&lt;/code&gt; or &lt;code&gt;print p.name&lt;/code&gt; ... or just look
in &lt;a href="https://github.com/BurntSushi/nflgame/blob/master/nflgame/players.json"&gt;players.json&lt;/a&gt;
and use &lt;code&gt;control-f&lt;/code&gt; , then start typing a players name to find
all the available fields for each player.&lt;/p&gt;
&lt;p&gt;In[85]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;week1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;week1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rushing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rushing_yds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playerid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;00-0025399&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playerid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;00-0023500&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--------&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;formatted_stats&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-------&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="n"&gt;Frank&lt;/span&gt; &lt;span class="n"&gt;Gore&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rushing_lngtd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_tds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_twopta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;rushing_lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;112&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_att&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_twoptm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;receiving_tds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_rec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_twopta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;receiving_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_lngtd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_twoptm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="n"&gt;Marshawn&lt;/span&gt; &lt;span class="n"&gt;Lynch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SEA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rushing_lngtd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_tds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_twopta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_att&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_twoptm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;receiving_tds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_rec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_twopta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;receiving_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_lngtd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_twoptm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fumbles_trcv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;fumbles_tot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fumbles_rcv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fumbles_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fumbles_lost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lets have a look at three, first game, match-ups between the 49'ers and the Seahawks.&lt;/p&gt;
&lt;p&gt;In[144]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;game12&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SEA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;game12&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nice_score&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*****&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2012 Away team: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game12&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;away&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# convert the named tuple to dict and iterate with items&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game12&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats_away&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_asdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-------&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2012 Home team: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;
&lt;span class="c"&gt;# convert the named tuple to dict and iterate with items&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats_home&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_asdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-------&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;vs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;SEA&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*****&lt;/span&gt;
&lt;span class="mi"&gt;2012&lt;/span&gt; &lt;span class="n"&gt;Away&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SEA&lt;/span&gt;
&lt;span class="n"&gt;first_downs&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;span class="n"&gt;total_yds&lt;/span&gt; &lt;span class="mi"&gt;251&lt;/span&gt;
&lt;span class="n"&gt;passing_yds&lt;/span&gt; &lt;span class="mi"&gt;115&lt;/span&gt;
&lt;span class="n"&gt;rushing_yds&lt;/span&gt; &lt;span class="mi"&gt;136&lt;/span&gt;
&lt;span class="n"&gt;penalty_cnt&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;penalty_yds&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;turnovers&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;punt_cnt&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;punt_yds&lt;/span&gt; &lt;span class="mi"&gt;194&lt;/span&gt;
&lt;span class="n"&gt;punt_avg&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;
&lt;span class="n"&gt;pos_time&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="mi"&gt;2012&lt;/span&gt; &lt;span class="n"&gt;Home&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SF&lt;/span&gt;
&lt;span class="n"&gt;first_downs&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="n"&gt;total_yds&lt;/span&gt; &lt;span class="mi"&gt;209&lt;/span&gt;
&lt;span class="n"&gt;passing_yds&lt;/span&gt; &lt;span class="mi"&gt;124&lt;/span&gt;
&lt;span class="n"&gt;rushing_yds&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;
&lt;span class="n"&gt;penalty_cnt&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;penalty_yds&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt;
&lt;span class="n"&gt;turnovers&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;punt_cnt&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;punt_yds&lt;/span&gt; &lt;span class="mi"&gt;298&lt;/span&gt;
&lt;span class="n"&gt;punt_avg&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;
&lt;span class="n"&gt;pos_time&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;07&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[145]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;game11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SEA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nice_score&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*****&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2011 Away team: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;away&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# convert the named tuple to dict and iterate with items&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats_away&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_asdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-------&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2011 Home team: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;
&lt;span class="c"&gt;# convert the named tuple to dict and iterate with items&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game11&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats_home&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_asdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-------&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;week_11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;week_11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rushing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rushing_yds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playerid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;00-0025399&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playerid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;00-0023500&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--------&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;formatted_stats&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-------&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;SF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;vs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;SEA&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*****&lt;/span&gt;
&lt;span class="mi"&gt;2011&lt;/span&gt; &lt;span class="n"&gt;Away&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SEA&lt;/span&gt;
&lt;span class="n"&gt;first_downs&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;
&lt;span class="n"&gt;total_yds&lt;/span&gt; &lt;span class="mi"&gt;219&lt;/span&gt;
&lt;span class="n"&gt;passing_yds&lt;/span&gt; &lt;span class="mi"&gt;155&lt;/span&gt;
&lt;span class="n"&gt;rushing_yds&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;penalty_cnt&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;
&lt;span class="n"&gt;penalty_yds&lt;/span&gt; &lt;span class="mi"&gt;72&lt;/span&gt;
&lt;span class="n"&gt;turnovers&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;punt_cnt&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="n"&gt;punt_yds&lt;/span&gt; &lt;span class="mi"&gt;342&lt;/span&gt;
&lt;span class="n"&gt;punt_avg&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;
&lt;span class="n"&gt;pos_time&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="mi"&gt;2011&lt;/span&gt; &lt;span class="n"&gt;Home&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SF&lt;/span&gt;
&lt;span class="n"&gt;first_downs&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;
&lt;span class="n"&gt;total_yds&lt;/span&gt; &lt;span class="mi"&gt;209&lt;/span&gt;
&lt;span class="n"&gt;passing_yds&lt;/span&gt; &lt;span class="mi"&gt;124&lt;/span&gt;
&lt;span class="n"&gt;rushing_yds&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;
&lt;span class="n"&gt;penalty_cnt&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;penalty_yds&lt;/span&gt; &lt;span class="mi"&gt;102&lt;/span&gt;
&lt;span class="n"&gt;turnovers&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;punt_cnt&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;punt_yds&lt;/span&gt; &lt;span class="mi"&gt;298&lt;/span&gt;
&lt;span class="n"&gt;punt_avg&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;
&lt;span class="n"&gt;pos_time&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;07&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="n"&gt;Frank&lt;/span&gt; &lt;span class="n"&gt;Gore&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rushing_lngtd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_tds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_twopta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;rushing_lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_att&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rushing_twoptm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;receiving_tds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_lng&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_rec&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_twopta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;receiving_yds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_lngtd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;receiving_twoptm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In[151]:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;game10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SEA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;SF&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;game10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nice_score&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;*****&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2010 Away team: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;game10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;away&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# convert the named tuple to dict and iterate with items&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats_away&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_asdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-------&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;2010 Home team: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;game10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;
&lt;span class="c"&gt;# convert the named tuple to dict and iterate with items&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;game10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stats_home&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_asdict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-------&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;week_10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;games&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nflgame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;week_10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rushing&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rushing_yds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playerid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;00-0025399&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playerid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;00-0023500&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;--------&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;formatted_stats&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;-------&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;SEA&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;vs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;SF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;*****&lt;/span&gt;
&lt;span class="mi"&gt;2010&lt;/span&gt; &lt;span class="n"&gt;Away&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SF&lt;/span&gt;
&lt;span class="n"&gt;first_downs&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;
&lt;span class="n"&gt;total_yds&lt;/span&gt; &lt;span class="mi"&gt;263&lt;/span&gt;
&lt;span class="n"&gt;passing_yds&lt;/span&gt; &lt;span class="mi"&gt;214&lt;/span&gt;
&lt;span class="n"&gt;rushing_yds&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;
&lt;span class="n"&gt;penalty_cnt&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="n"&gt;penalty_yds&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
&lt;span class="n"&gt;turnovers&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;punt_cnt&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;punt_yds&lt;/span&gt; &lt;span class="mi"&gt;249&lt;/span&gt;
&lt;span class="n"&gt;punt_avg&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;
&lt;span class="n"&gt;pos_time&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="mi"&gt;2010&lt;/span&gt; &lt;span class="n"&gt;Home&lt;/span&gt; &lt;span class="n"&gt;team&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SEA&lt;/span&gt;
&lt;span class="n"&gt;first_downs&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;
&lt;span class="n"&gt;total_yds&lt;/span&gt; &lt;span class="mi"&gt;242&lt;/span&gt;
&lt;span class="n"&gt;passing_yds&lt;/span&gt; &lt;span class="mi"&gt;165&lt;/span&gt;
&lt;span class="n"&gt;rushing_yds&lt;/span&gt; &lt;span class="mi"&gt;77&lt;/span&gt;
&lt;span class="n"&gt;penalty_cnt&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;penalty_yds&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;
&lt;span class="n"&gt;turnovers&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;punt_cnt&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;punt_yds&lt;/span&gt; &lt;span class="mi"&gt;207&lt;/span&gt;
&lt;span class="n"&gt;punt_avg&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;
&lt;span class="n"&gt;pos_time&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;So we took a look at the team stats for the last three, first game, match-ups
to see if we could uncover any actionable information. We see that Frank Gore
played in 2011 but not in 2010. Marshawn Lynch did not play in 2011 nor in 2010. Not
much to go on there...&lt;/p&gt;
&lt;p&gt;Rushing yards were low in the first two games, which may have suggested that the
third game would have been similar. However, the 2012 match-up had both teams with over 100 yards
rushing which may or may not be an outlier. Now to be thorough, I should compare the
running backs I had on the bench in a similar manner. Then, ultimately, make a reasonable guess.&lt;/p&gt;
&lt;p&gt;Not all is lost in this simple analysis, I learned a bit about tuples in the
process. I can also say that I am learning while playing which is 'win-win.' Perhaps the
trophy on my mantle is a bit pre-mature at this point, as I really need to learn statistics
(stay tuned for more on that front).&lt;/p&gt;
&lt;p&gt;Here is a neat little tidbit about Named tuples that I learned during this.
The team stats are created in game.py and are delivered as a &lt;code&gt;namedtuple()&lt;/code&gt;.
The &lt;code&gt;._asdict()&lt;/code&gt; method on Named Tuples will return an ordered
dict as described &lt;a href="http://docs.python.org/release/2.7.4/library/collection
s.html#collections.somenamedtuple._asdict"&gt;here&lt;/a&gt;. Once you have a dict, simply use
(chain on) the &lt;code&gt;.items()&lt;/code&gt; method to iterate over the key and value. If you want
the keys or values by themselves, use the &lt;code&gt;.keys()&lt;/code&gt; or &lt;code&gt;.values()&lt;/code&gt; methods
respectively.&lt;/p&gt;
&lt;p&gt;I plan on using this extensively next season. In preparation, I have been
learning statistics and the Pandas data analysis python library.&lt;/p&gt;
&lt;p&gt;Note: Everything I work on in this space is using iPython Notebook and will
be published for you to run as well...&lt;/p&gt;</summary></entry><entry><title>Installing iPython Notebook on Mountain Lion</title><link href="http://michaelmartinez.in/installing-ipython-notebook-on-mountain-lion.html" rel="alternate"></link><updated>2013-01-06T00:00:00-07:00</updated><author><name>Michael Martinez</name></author><id>tag:michaelmartinez.in,2013-01-06:installing-ipython-notebook-on-mountain-lion.html</id><summary type="html">&lt;p&gt;I've successfully installed iPython Notebook on a few different versions of OSX
in recent months. There are quite a few methods of accomplishing this task and
many of them seem quite elegant. The fact remains that installing iPyNB is not
as strait forward as one might like and hopefully you find this of some utility.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;a&lt;/p&gt;
&lt;h2&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;This was built on a Mac running OSX 10.8.2 with the &lt;a href="http://developer.apple.com/downloads"&gt;command line tools&lt;/a&gt;
installed. I deleted my version of Xcode because it takes up a lot of space on
my SSD and I am not a mac dev (at the moment). You can sign up for a free ID with
Apple to get the download and there are lots of other goodies in the download area.&lt;/p&gt;
&lt;p&gt;My system also has the package manager &lt;a href="http://mxcl.github.com/homebrew/"&gt;Homebrew&lt;/a&gt;
installed. You could probably build everything here by hand, but why not
leverage community efforts that lead to less stress, effort and error prone
configuration? Install Homebrew, be happy and get to work orders of magnitude
faster.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;System Configuration&lt;/h2&gt;
&lt;p&gt;The C language ecosystem is a bit perplexing as an outsider with no real experience
with the language and tool-chain. Thanks to the good people at Google, we can enter
the foray with battle paint and Bluetooth keyboards. In all seriousness, I am not
entirely sure why I had to do these steps with OSX Mountain Lion... but I did
and you might want to follow suit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://robots.thoughtbot.com/post/27985816073/the-hitchhikers-guide-to-riding-a-mountain-lion"&gt;Thoughtbot ML Stuff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/3182604"&gt;Get Homebrew and ML to be happy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;...et cetera, et cetera...&lt;/p&gt;
&lt;p&gt;The "fix" I came to realize after lots of head banging was &lt;em&gt;Critical&lt;/em&gt; as ML ships with llvm-gcc-4.2.
Homebrew and a &lt;em&gt;lot&lt;/em&gt; of the software it builds do not like llvm-gcc-4.2. They make
it known when they refuse to install the packages you've requested. Here is what
you do:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo ln -s /usr/bin/llvm-gcc-4.2 /usr/bin/gcc-4.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yep, not much... but boy was that frustrating to figure out. The other story here
is to download X11 via &lt;a href="http://xquartz.macosforge.org/trac/wiki"&gt;Quartz 2.7.2+&lt;/a&gt;,
then install and symlink it in:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s /opt/X11 /usr/X11
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;iPython Install&lt;/h2&gt;
&lt;p&gt;Now that we have that fun stuff taken care of we can install iPython Notebook
and some science-y tools. To get started you should probably look into some kind of environment manager.
&lt;a href="https://github.com/brainsik/virtualenv-burrito"&gt;virtualenv burrito&lt;/a&gt; is a good start to get up and running quickly.
I know there are many ways to skin this cat: pythonbrew, virtualenv, virtualenvwrapper.&lt;/p&gt;
&lt;p&gt;Pick one and go for it. I was weary of Pythonbrew until a few weeks ago when it
became active again. I think it is the closest thing to Ruby's RVM and it worked
for me in a VM. However, I wanted to try virtualenv burrito as it nicely packages
virtualenv += wrapper and has performed flawlessly thus far. Seriously pick one
move on.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkvirtualenv ipy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that we have a new virtualenv, lets get installing:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;workon ipy
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install ipython
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once ipython has finished installing we need to install readline&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install readline
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we install tornado for iPython Notebook&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install tornado
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next item is the installation of the ZeroMQ library. Ultimately we want to install
pyzmq. However, its a bit dicey using pip for reasons explained on their repo page
&lt;a href="https://github.com/zeromq/pyzmq#mac-osx"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brew install zeromq --universal
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once that is completed we can now install pyzmq with pip:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pyzmq
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next is the install of pygments for syntax highlights:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pygments
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After pygments installs we need to install freetype and libpng via
Homebrew. The reason we want ipython is for the super awesome graphics,
right? Well, you need these badboys to get super awesome graphics.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brew install freetype
&lt;span class="nv"&gt;$ &lt;/span&gt;brew install libpng
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now time to install pyqt. I believe there is some misconception about pyqt and
what is needed to install it correctly. If you followed this &lt;a href="https://github.com/sympy/sympy/wiki/Installing-the-IPython-qtconsole-in-Mac-OS-X"&gt;Sympy wiki entry&lt;/a&gt;
you would install the QT stuff prematurely. Before I installed pyqt, I had a gander
at the Homebrew formula. In it, I noticed that pyqt will download and install all the
dependencies to make it work. I am telling you, Homebrew will make you happy!!!&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brew install pyqt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;YOU HAVE DONE IT!!! You now have a fully functional iPython qtconsole and notebook.
I suggest installing in this order to minimize errors.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Science Modules&lt;/h2&gt;
&lt;p&gt;Now lets install numpy&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install numpy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We need some fortran to compile scipy, so before we can install scipy we need:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;brew install gfortran
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: I found that homebrew would hang on the mpfr dependency. I filed a bug and
it was &lt;a href="https://github.com/mxcl/homebrew/commit/4900ad83b973f0db32f8808193f2ec55ffd4f412"&gt;fixed&lt;/a&gt;
in less than 8 hours on a Sunday. That is Fucking Awesome. (not much else to say)&lt;/p&gt;
&lt;p&gt;Now we can go get scipy:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install scipy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some folks recommend installing matplotlib from git on ML. I took one for the team
and just let it rip with pip and it worked great.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install matplotlib
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These are probably the bare essentials to get started with some science. You may
want to install Pandas, Sympy, stats models, pymc and others if you are a ninja. I am
in the process of learning the math required to really use these libraries/modules,
so I am definitely not a ninja just yet... but watch this space.&lt;/p&gt;
&lt;p&gt;Here are some cool notebooks to play around with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/invisibleroads/crosscompute-tutorials"&gt;Invisibleroads CrossCompute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ipython/ipython/tree/master/docs/examples/notebooks"&gt;What can iPython Notebook do?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/masinoa/machine_learning"&gt;Machine Learning with iPython Notebooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Virtual Machines</title><link href="http://michaelmartinez.in/virtual-machines.html" rel="alternate"></link><updated>2013-01-06T00:00:00-07:00</updated><author><name>Michael Martinez</name></author><id>tag:michaelmartinez.in,2013-01-06:virtual-machines.html</id><summary type="html">&lt;p&gt;Let me just put this right out there; Virtual Machines are awesome, but not
for me in this use case.&lt;/p&gt;
&lt;p&gt;For the last 6 or so months I have been developing in separate environments.
Using VM ware Fusion for Mac OSX has enabled me to create virtual computers that
facilitate complete separation between my main machine and dev environments.
I will explain what I did followed by why and how it worked out.&lt;/p&gt;
&lt;p&gt;The creation of an OSX Mountain Lion VM is painless. After creation I went in
and removed a bunch of non-necessary apps. After all, I was mainly interested in
using the VM to develop, not manage pictures or play with GarageBand. Removing
the unnecessary apps made the VM footprint a lot smaller, which was another nice
side effect.&lt;/p&gt;
&lt;p&gt;I keep most of my important configurations in a version control system called
git. I store these repositories at Github, which makes retrieving and
subsequently installing them super easy. Once the machine was provisioned with
my configurations, I used my laptop script to install the apps and packages I
use for developing and managing.&lt;/p&gt;
&lt;p&gt;Up to this point I have a few hours invested and I figure I can make a copy of
VM for future use. Lets call it the base VM. From here I can experiment with
new packages, modules and code. I install items without regard for my system as
I can simply roll back the changes or start anew. Life is good...&lt;/p&gt;
&lt;p&gt;The problem I have experienced with this setup is managing what is installed,
where it is installed and how to keep track of it all. This gets really
complicated when I have 4 or 5 VM's that are purpose built for different
programming languages and/or tools. I often need to modify my path or another
config file, for example, in each VM. This is a managerial nightmare as I have
4 or 5 different dotfile configurations to stay on top of. Yuck.&lt;/p&gt;
&lt;p&gt;What I've found is that I am unable to really stay on top of each VM and my main
machine when I really just want to focus on getting something done. Conversely,
I can't get anything done when I spend all my time making sure all of the repos
are up to date. Houston we have a problem.&lt;/p&gt;
&lt;p&gt;My hat is off to those of you with more than one computer and also manage to
keep everything sane. I have toyed around with the idea of one main computer and
another traveling computer or something like that. This experiment has taught me
that I am a one computer man. I guess my particular OCD dictates that I keep my
config files up to date and if my computer blows up, I can simply move to another...
but not more than one at a time.&lt;/p&gt;</summary></entry><entry><title>Bloging with Pelican</title><link href="http://michaelmartinez.in/bloging-with-pelican.html" rel="alternate"></link><updated>2013-01-01T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2013-01-01:bloging-with-pelican.html</id><summary type="html">&lt;h2&gt;New Year, New Domain&lt;/h2&gt;
&lt;p&gt;I am migrating away from caffeineindustries and you, my dear reader, may be scratching your head. Fear NOT!! 
The reasons for this migration are several fold. I will enumerate a few of them here. &lt;/p&gt;
&lt;p&gt;Numero uno, I have been spending quite a bit of time in school. This leaves very little time for other (generally more fun)
activities like blogging and programming. So... I take lots of notes for school and gave up on &lt;a href="http://evernote.com"&gt;Evernote&lt;/a&gt; 
as a study buddy last semester. Lets just say it is nice for some, but not for me.&lt;/p&gt;
&lt;p&gt;I have almost completely switched to emacs for my day-to-day text based activities. That includes notes, code and love letters to my wife. 
&lt;a href="http://orgmode.org"&gt;Org-mode&lt;/a&gt; has basically changed the way I write my life. Emacs in general give one the feeling of invincibility, for serious!&lt;/p&gt;
&lt;p&gt;Spending so much time in emacs has allowed me to write everything down in plain text. I can then convert this to a plethora of formats, 
many of which are suitable for the web. There is even an org-mode plugin that facilitates org-mode files to wordpress blogs. Wordpress is 
great software and I don't have too many complaints. That said, I have always struggled to get exactly what I want without diving into PHP.&lt;/p&gt;
&lt;p&gt;I don't want to learn PHP right now. There are a lot of people who say a lot of NOT nice things about PHP. I haven't really worked with 
it so I will reserve judgment for now. I will say that I am trying to really learn Python... SO I found a python static site generator to 
build this site and hack on here and there. &lt;/p&gt;
&lt;p&gt;In the end, change is something that I am confortable with (thank goodness as this world moves fast). I hope to add a bunch of cool science-y 
web experiments in the lab section. The notes section is for all my personal notes for study and reminders and general brain-dumps. &lt;/p&gt;
&lt;h2&gt;Now Powered by Pelican&lt;/h2&gt;
&lt;p&gt;This blog and website is now powered by the great &lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; static site generator.
The documentation for the engine is quite good and didn't require much googling. If you are familiar with 
Pelican, you have surely noticed that this is a custom theme. I will clean it up a bit and release it in 
due time. More on Pelican in a future post... &lt;/p&gt;</summary></entry><entry><title>Nodejitsu Lab App</title><link href="http://michaelmartinez.in/nodejitsu-lab-app.html" rel="alternate"></link><updated>2012-07-10T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-07-10:nodejitsu-lab-app.html</id><summary type="html">&lt;p&gt;So I've been playing around with &lt;a href="http://nodejs.org/"&gt;node.js&lt;/a&gt; a bit. I dig it basically
because I dig Javascript. Node is one of those disruptive technologies
that people either love or hate... or ironically both. You program to
async patterns for E_V_E_R_Y_T_H_I_N_G, and I mean everything.
Procedural code will break stuff and break it badly.&lt;/p&gt;
&lt;p&gt;One of the strengths of node.js is the ability to write super fast
command-line applications. I have a several that are complete messes at
this point, but I am cleaning them up to be presentable on Github... So
I can't, in good conscience leave you with no "demo"... so here is the
monk lab page, written with the &lt;a href="http://expressjs.com/"&gt;Express&lt;/a&gt; framework and hosted by the
awesome dudes at &lt;a href="http://www.nodejitsu.com/"&gt;Nodejitsu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check it out here; http://monklab.nodejitsu.com/&lt;/p&gt;</summary></entry><entry><title>AppFog - Ruby on Rails 3.2 Tutorial</title><link href="http://michaelmartinez.in/appfog-ruby-on-rails-32-tutorial.html" rel="alternate"></link><updated>2012-06-27T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-06-27:appfog-ruby-on-rails-32-tutorial.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.appfog.com/"&gt;AppFog&lt;/a&gt; is an incredible service in the land of PaaS or Platform as a
Service. They are a &lt;a href="http://www.cloudfoundry.com/"&gt;Cloud Foundry&lt;/a&gt;-powered polyglot platform. You
can &lt;a href="https://console.appfog.com/signup"&gt;sign up&lt;/a&gt; for beta access now and start pushing apps strait away.
Their web based management interface is really nice, and I am a sucker
for nicely designed "things."  In this post I'd like to show you all how
I got a Ruby on Rails app up and running.&lt;/p&gt;
&lt;h2&gt;Create&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
A developer has two ways to create a new RoR app.&lt;/p&gt;
&lt;p&gt;​1. Use the AppFog console to bootstrap a shell RoR app. [&lt;a href="https://github.com/appfog/af-ruby-rails"&gt;source
code&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;This will net a basic shell RoR app with Ruby version 1.9.3-p125 and
Rails version 3.2.5&lt;/p&gt;
&lt;p&gt;​2. Use the &lt;strong&gt;af&lt;/strong&gt; gem to push your locally developed app to the cloud.&lt;/p&gt;
&lt;h2&gt;Push&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
How do you push an app to AppFog?&lt;/p&gt;
&lt;p&gt;Hopefully you are using rvm, rbenv or have some sort of Ruby/Gem
management system set-up. Rvm and rbenv are out of the scope of this
tutorial. I use rvm to create project-based gemsets with a directory
level .rvmrc file. You can read more about rvm &lt;a href="https://rvm.io//"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;gem install af
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you are ready to push issue this command:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;af push &amp;lt;appname&amp;gt; --runtime&lt;span class="o"&gt;=&lt;/span&gt;ruby193
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you don’t specify an app name, AppFog will use the directory name. I
found that my Ruby version wasn't automatically detected without the
runtime flag. I found this by looking through the af gem source code on
Github. (I love OSS!) The runtimes supported by AppFog can be found
using "af runtimes".&lt;/p&gt;
&lt;p&gt;You will then be taken though a series of yes/no questions where the
details come into play. Accepting the default answer for all of these
questions with the exception of database technology is the simplest way
to get up and running. You can choose between Mongo and MySQL for the
database technology to use, so even that isn’t very complicated.&lt;/p&gt;
&lt;p&gt;Let me be clear, I have not veered far from the quickest path to get my
app set-up. Subsequent tutorials will have more on this front.&lt;/p&gt;
&lt;h2&gt;Running / Errors&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
At this point you are either running or you have error(s). If you have
an error, use “af logs \&amp;lt;appname&gt;” to diagnose what went wrong. You can
also head to the &lt;a href="http://support.appfog.com/forums"&gt;support forums&lt;/a&gt; or the &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/appfog-users"&gt;Google group&lt;/a&gt; to ask a
question or look through previous questions/discussions.&lt;/p&gt;
&lt;p&gt;In either app creation case, you are going to use "af update
\&amp;lt;appname&gt;" once you have something you'd like show the world or need
to make a change. This command is strait forward; push the changes to
the cloud.&lt;/p&gt;
&lt;h2&gt;Sum it up&lt;/h2&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;create app either on AppFog or locally&lt;/li&gt;
&lt;li&gt;install af gem&lt;/li&gt;
&lt;li&gt;af push or af update&lt;/li&gt;
&lt;li&gt;profit&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;

&lt;h3&gt;Notes:&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
When I looked at the available commands using "af  --help", it was not
immediately clear what each command was used for. A good option to learn
more is to read though the &lt;a href="https://github.com/appfog/af"&gt;source&lt;/a&gt;.  OR you can wait for my next
tutorial where I'll dive in with both feet on every available command.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Database&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
Using MySQL? You &lt;strong&gt;&lt;em&gt;need&lt;/em&gt;&lt;/strong&gt; the &lt;strong&gt;&lt;em&gt;mysql2 gem&lt;/em&gt;&lt;/strong&gt; in your gemfile. Also,
if you intend to develop your app against MySQL locally, you will want
your database.yml file to look like or similar to the gist below.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# comment out when working locally&lt;/span&gt;
&lt;span class="c"&gt;# un-comment this for deployment&lt;/span&gt;
development:
  adapter: sqlite3
  database: db/development.sqlite3
  pool: 5
  timeout: 5000

&lt;span class="c"&gt;# un-comment this when working locally&lt;/span&gt;
&lt;span class="c"&gt;# comment out when deploying&lt;/span&gt;
&lt;span class="c"&gt;#development:&lt;/span&gt;
&lt;span class="c"&gt;#  adapter: mysql2&lt;/span&gt;
&lt;span class="c"&gt;#  encoding: utf8&lt;/span&gt;
&lt;span class="c"&gt;#  reconnect: false&lt;/span&gt;
&lt;span class="c"&gt;#  database: gisticle_development&lt;/span&gt;
&lt;span class="c"&gt;#  pool: 5&lt;/span&gt;
&lt;span class="c"&gt;#  username: michaelmartinez&lt;/span&gt;
&lt;span class="c"&gt;#  password: &amp;lt;password&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#  host: 127.0.0.1&lt;/span&gt;

production:
  adapter: sqlite3
  database: db/production.sqlite3
  pool: 5
  timeout: 5000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I am not sure why the database.yml needs to be set-up like this and
quite frankly it could be my error (system or set-up). The error
I received was database adapter not found and I have narrowed it down to
the application creation process. Once the app is up and running, I have
been able to use either configuration.&lt;/p&gt;
&lt;h3&gt;Notes:&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
Developing with MySQL locally will help to eliminate a potential source
of frustration not related to AppFog. A simple query that works with
sqlite3 may completely fail with PG or MySQL due to type casting, as
just one example. Databases like PostgreSQL and MySQL have more features
than sqlite3 but are more strict with type. So, you can avoid a lot of
potential problems by simply developing against the database you intend
to use in production.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Package&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
You need to pre-package the app to the greatest extent possible.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bundle package
&lt;span class="nv"&gt;$ &lt;/span&gt;bundle install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Keep in mind that “bundler package” will add size, in some cases
significant size, to your app. This command caches a local version of
each gem to your vendor/cache dir and some gems are really large.&lt;/p&gt;
&lt;p&gt;Potential problems with gems, bundler and AppFog; Lets say you need to
modify a published gem. Lets also posit that you fork and modify this
gem to fit your particular app (change color scheme, etc.). You can use
bundler's &lt;a href="http://gembundler.com/git.html"&gt;git feature&lt;/a&gt; to host this modified gem on Github and it
will behave as if it was hosted on rubygems.org. This is great when
working locally or you have access to bundler and/or rake.&lt;/p&gt;
&lt;p&gt;I've found that you may need to publish the modified gem to rubygems.org
for it to work properly in production. In fact I have not been able to
use un-published gems with AppFog. If your modification is a useful
feature the community may benefit from, consider submitting a pull
request through proper channels before going down this road.&lt;/p&gt;
&lt;h3&gt;Sum it up&lt;/h3&gt;
&lt;p&gt;&lt;/p&gt;
In a nut shell... stick with published gems and you'll be A-OK.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Precompile&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
Speaking of packaging and pre-deployment. If you are using rails 3 and
the asset pipeline you need to run this command before you push or
update.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake assets:precompile
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
Whew! I hope this helps you navigate the AppFog PaaS. Stay tuned for
more and if you have questions don’t hesitate to ask… in the &lt;a href="http://support.appfog.com/forums"&gt;support
forums&lt;/a&gt; or the &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/appfog-users"&gt;Google group&lt;/a&gt;! I am neither an AppFog or
CloudFoundry expert nor an employee, I simply believe in the Kool-Aid
they are pushing.&lt;/p&gt;</summary></entry><entry><title>Coffeescript, Jasmine and Katas</title><link href="http://michaelmartinez.in/coffeescript-jasmine-and-katas.html" rel="alternate"></link><updated>2012-03-10T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-03-10:coffeescript-jasmine-and-katas.html</id><summary type="html">&lt;p&gt;Hey-O!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://coffeescript.org/"&gt;CoffeeScript&lt;/a&gt; is nice. It provides syntactic sugar and adds
tremendous functionality to the web developers tool-chest. Those who
appreciate terse, yet readable and well formatted code; CoffeeScript
will seem like a manna from heaven. I find that I am already looking at
my JavaScript and refactoring it in my head to CoffeeScript.&lt;/p&gt;
&lt;p&gt;On long road trips I generally have a few hours to kill while the rest
of the family is asleep. I generally take this time to fire up some
podcasts and/or tutorials and to learn as I drive. I actually look
forward to this time as I can almost totally focus on the content.&lt;/p&gt;
&lt;p&gt;This trip I decided to load my Galaxy Nexus with a metric ton of
CoffeeScript screen casts (just audio) and podcasts. My intention was to
get the basics out of the way and I accomplished that objective.&lt;/p&gt;
&lt;p&gt;Since I've returned home, I have decided to stick with CoffeeScript and
add a few more. I have decided that my code needs to tested more
throughly. CoffeeScript has made testing a complete breeze.&lt;/p&gt;
&lt;p&gt;I've also become a believer in dedicated, &lt;a href="http://www.missiontolearn.com/2010/04/deliberate-practice/"&gt;deliberate practice&lt;/a&gt;. One
can constantly reuse the same patterns and never really push themselves
to get better. However, those who deliberately practice techniques and
patterns they are not comfortable with generally begin to excel faster
than those who just put in the hours haphazardly.&lt;/p&gt;
&lt;p&gt;I used &lt;a href="http://osherove.com/tdd-kata-1/"&gt;this code kata&lt;/a&gt; with CoffeeScript and Jasmine.&lt;/p&gt;
&lt;p&gt;Click the post image to see the passing tests!&lt;/p&gt;
&lt;p&gt;Here is my solution:&lt;/p&gt;
&lt;p&gt;The Spec's in CoffeeScript&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;describe&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;StringCalc&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;describe&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;constructor&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StrCalc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;replaces null with 0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firstNum&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 0

    &lt;span class="n"&gt;describe&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;constructor&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StrCalc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;replaces &amp;quot;0&amp;quot; with 0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firstNum&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 0

    &lt;span class="n"&gt;describe&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;constructor&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;multiple&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StrCalc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;1, 2, 3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;matches first arg to firstNum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firstNum&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 1

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;matches second arg to secondNum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secondNum&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 2

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;matches third arg to thirdNum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thirdNum&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 3

    &lt;span class="n"&gt;describe&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StrCalc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2, 4, 6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;adds three arguments of StrCalc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 12

    &lt;span class="n"&gt;describe&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;bigger&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;StrCalc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;20\n40, 60&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;adds three arguments for big numbers and wacky delimiters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;mystrCalc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;toEqual&lt;/span&gt; 120
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The implementation in CoffeeScript:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StrCalc&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;StrCalc&lt;/span&gt;

    &lt;span class="n"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myStr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;myStr&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;myStr&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; 0
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;firstNum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 0
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;parseMyNum&lt;/span&gt; &lt;span class="n"&gt;myStr&lt;/span&gt;

    &lt;span class="n"&gt;parseMyNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myStr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+.*&lt;/span&gt;?&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gm&lt;/span&gt;
      &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myStr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;
      &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;firstNum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseInt&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;secondNum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseInt&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;1&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;thirdNum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseInt&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;2&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;firstNum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;secondNum&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;thirdNum&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Paste the CoffeeScript &lt;a href="http://js2coffee.org/"&gt;here&lt;/a&gt; to see what it looks like in JavaScript.&lt;/p&gt;</summary></entry><entry><title>Thick Client Architecture</title><link href="http://michaelmartinez.in/thick-client-architecture.html" rel="alternate"></link><updated>2012-03-04T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-03-04:thick-client-architecture.html</id><summary type="html">&lt;p&gt;The funny thing about not knowing something is... not knowing. Until a
few weeks ago I had no idea that a massive transformation was taking
place under my own feet. I knew that servers served and browsers
display. I didn't realize that so many developers using ASP.NET MVC and
Ruby on Rails relied on the server for everything except the container.
Ignorance is bliss eh?&lt;/p&gt;
&lt;p&gt;See, to me it makes perfect sense to do as much as one possibly can on
the client. Knowing that the least amount of work one can do to get the
best results is the perfect amount of work. I have always set out to get
the maximum "bang-for-my-buck" as it were.&lt;/p&gt;
&lt;p&gt;We are now seeing lots of posts titled: &lt;a href="http://fhwang.net/2012/03/05/Should-your-web-application-be-rich-client-from-day-one"&gt;Should your web application be
rich-client from day one?&lt;/a&gt; and &lt;a href="http://eliperelman.com/blog/2012/03/03/decoupling-front-ends/"&gt;decoupling front ends&lt;/a&gt;. Great reads
to be sure, but to me this is common wisdom. However, I haven't been a
developer for as long as many of these developers so I don't have the
experience or historical perspective.&lt;/p&gt;
&lt;p&gt;I do feel that this is a prime time for indie-developers, like me, to
make a dent in the development world. If front end developers have
invested a little time to become proficient with JavaScript they will
have very little trouble transferring to the newer thick-client
architecture paradigm. In other words, a front end developer can now
realistically get a big project off the ground without a massive backend
effort in parallel.&lt;/p&gt;
&lt;p&gt;Don't get me wrong, a masterfully crafted RESTful API is indeed a thing
of beauty and generally bomb-proof. However, geting a "working" web app
out the door without knowing the nuts and bolts of a massive server-side
framework is within closer reach than ever before. Exciting!!!!&lt;/p&gt;
&lt;p&gt;I would be lying if I told you this wasn't exciting to me on a personal
and professional level. I have been really focused on mobile and web for
the last year and I hope some exciting opportunities extend from my
efforts.&lt;/p&gt;</summary></entry><entry><title>Using Knockoutjs's foreach on nested jQuery Mobile lists</title><link href="http://michaelmartinez.in/using-knockoutjss-foreach-on-nested-jquery-mobile-lists.html" rel="alternate"></link><updated>2012-02-22T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-02-22:using-knockoutjss-foreach-on-nested-jquery-mobile-lists.html</id><summary type="html">&lt;p&gt;I just want to drop a quick note to anyone who may search google for a
problem I ran into.A nested jQuery mobile list can be populated with one
knockoutjs observable array. The only caveat I've seen thus far is that
you need to use the foreach data-binding twice. Once on the outer list
and again for the inner "list" or page.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;data-role=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listview&amp;quot;&lt;/span&gt;  &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foreach: watched&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;data-role=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;list-divider&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Repo: &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: name&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;data-role=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;listview&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;foreach: watched&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Description:&lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: description&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ui-li-count&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Forks: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: forks&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt; - Issues: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt;
                    &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: open_issues&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                                      - Watchers: &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: watchers&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Language: &lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: language&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;Owner:&lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: owner&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;h4&amp;gt;&lt;/span&gt;URL:&lt;span class="nt"&gt;&amp;lt;/h4&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;data-bind=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text: url&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Twitter Bootstrap with Html5 Boilerplate's Build</title><link href="http://michaelmartinez.in/twitter-bootstrap-with-html5-boilerplates-build.html" rel="alternate"></link><updated>2012-02-20T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-02-20:twitter-bootstrap-with-html5-boilerplates-build.html</id><summary type="html">&lt;p&gt;&lt;a href="http://twitter.github.com/bootstrap/"&gt;Twitter bootstrap&lt;/a&gt; is a great piece of kit. &lt;a href="http://html5boilerplate.com/"&gt;Html5 boilerplate
(h5bp)&lt;/a&gt; is also a great piece of kit. Those of you who have used h5bp
know it also comes bundled (or not?) with a great &lt;a href="https://github.com/h5bp/ant-build-script"&gt;ant build script&lt;/a&gt;.
This build script automagically builds, minifies, compresses,
concatenates, lints and hints the files you specify. A ton of crap,
really.&lt;/p&gt;
&lt;p&gt;You will have to read the &lt;a href="http://html5boilerplate.com/docs/Build-script/"&gt;documentation&lt;/a&gt; as it makes some assumptions
in regards to your project scaffolding and what-have-you. Seriously,
read the documentation. You don't have to trust me when I say its worth
it, but it is.&lt;/p&gt;
&lt;p&gt;So now that I found this script, I want to use it on every project. Once
everything is set-up it is just so easy to run. I have forced myself to
use it on trivial tests and what not. My &lt;a href="http://lab.caffeineindustries.com"&gt;lab page&lt;/a&gt; is a total
work-in-progress and made with Twitter bootstrap. I thought I would show
you how I integrated h5bp ant-build-script with it.&lt;/p&gt;
&lt;p&gt;As you can see, I mimicked the file structure that h5bp recommends in
the documentation (RTFM, right?)&lt;/p&gt;
&lt;p&gt;I then modified the project. properties file to include the changes you
see here:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;# project.properties file defines overrides for default.properties&lt;/span&gt;

&lt;span class="c"&gt;# Explanation: This file should be created by each user as and when he or she needs to override particular values.&lt;/span&gt;
&lt;span class="c"&gt;# Consequently, it should not be placed under version control.&lt;/span&gt;

&lt;span class="c"&gt;# Stylesheets&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Note: Stylesheets will be concatenated in the order they are listed in the file.stylesheets property (i.e. the last&lt;/span&gt;
&lt;span class="c"&gt;# file listed will be at the end of the concatenated file), so it probably makes sense to have the main style.css file&lt;/span&gt;
&lt;span class="c"&gt;# as the first entry&lt;/span&gt;
&lt;span class="c"&gt;# Example:&lt;/span&gt;
&lt;span class="c"&gt;# file.stylesheets  = style.css, lightbox.css, plugin.css&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stylesheets&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bootstrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;

&lt;span class="c"&gt;# Web Pages&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# These are the pages (files) that will be served to users (.html, .php, .asp, etc). Files in this property will&lt;/span&gt;
&lt;span class="c"&gt;# be minified / optimised and have any stylesheet or javascript references updated to the minified examples&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# The paths need to be relative&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Files can be added in a comma separated form&lt;/span&gt;
&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;        &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toolbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vacapp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;

&lt;span class="c"&gt;# Excluded files and dirs&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Add any files or directories you add to the project and do not want to be copied to the publish directory as a&lt;/span&gt;
&lt;span class="c"&gt;# comma separated list&lt;/span&gt;
&lt;span class="c"&gt;# These files are ignored in addition to the default ones specified in default.properties.&lt;/span&gt;
&lt;span class="c"&gt;# Example: file.exclude = badfolder/**&lt;/span&gt;
&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt;      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/**&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;less&lt;/span&gt;&lt;span class="o"&gt;/**&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="c"&gt;# Bypassed JavaScript files and dirs&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Add any files or folders within the mylibs directory that you want to be copied to the publish directory as a&lt;/span&gt;
&lt;span class="c"&gt;# comma separated list&lt;/span&gt;
&lt;span class="c"&gt;# These files will not be concatenated or minimized and will simply be copied over as is.&lt;/span&gt;
&lt;span class="c"&gt;# Note: you cannot declare an empty file.bypass property, it would exclude the entire mylibs folder&lt;/span&gt;
&lt;span class="c"&gt;# Example:&lt;/span&gt;
&lt;span class="c"&gt;# file.js.bypass = widgets.js, gadgets.js, gidgets.js&lt;/span&gt;
&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bypass&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cafflab&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;

&lt;span class="c"&gt;# Directory Structure&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Override any directory paths specific to this project&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# dir.publish&lt;/span&gt;
&lt;span class="c"&gt;# dir.js&lt;/span&gt;
&lt;span class="c"&gt;#dir.js.libs = js/bootstrap&lt;/span&gt;
&lt;span class="c"&gt;#dir.js.mylibs = js/bootstrap&lt;/span&gt;
&lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;
&lt;span class="c"&gt;# dir.img&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: I've only included the actual changes to my file. The actual
project.properties is a bit denser.&lt;/p&gt;
&lt;p&gt;I haven't gone all-the-way with the power of the build script thus far.
As you can see, I am not fully concatenating my javascript and css
files. However, they are fully linted, hinted and compressed which is
better than nothing, I suppose. I will keep working and making
refinements to this process, but I've seen the light with an
intermediate build step in deployment. It is so full of win, that I
can't imagine doing it another way.&lt;/p&gt;
&lt;p&gt;If you simply use build like I have, you will save a tremendous amount
of time optimizing your pages for production. Once you see this in
action... You will have a hard time turning back as well, I reckon.&lt;/p&gt;
&lt;p&gt;Todo: Work out how to force the build script into nested directories for
the manifest. Maybe even get a wild hair and attempt to write a pre
build-build that analyzes the project structure.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2012/02/Screen-shot-2012-02-20-at-4.31.30-PM-225x300.png" title="Screen shot 2012-02-20 at 4.31.30 PM" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2012/02/Screen-shot-2012-02-20-at-4.31.30-PM.png&lt;/p&gt;</summary></entry><entry><title>Github Mobile - A jQuery Mobile Project</title><link href="http://michaelmartinez.in/github-mobile-a-jquery-mobile-project.html" rel="alternate"></link><updated>2012-02-12T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-02-12:github-mobile-a-jquery-mobile-project.html</id><summary type="html">&lt;p&gt;I was having so much fun with the Github Api and my new found love of
Git &amp;amp;&amp;amp; Github that I to make something mobile!&lt;/p&gt;
&lt;p&gt;It is definitely a work in progress. Don't put in your API token. As of
now I don't have any features enabled that require it. So without
further ado, have a play here:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE:&lt;/em&gt; I am re-doing this code for the switch over to this blog&lt;/p&gt;</summary></entry><entry><title>Lab - Twitter Bootstrap V2</title><link href="http://michaelmartinez.in/lab-twitter-bootstrap-v2.html" rel="alternate"></link><updated>2012-02-09T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-02-09:lab-twitter-bootstrap-v2.html</id><summary type="html">&lt;p&gt;The awesome duo, @mdo &amp;amp;&amp;amp; @fat, of &lt;a href="http://twitter.github.com/bootstrap/"&gt;Twitter bootstrap&lt;/a&gt; fame have
released &lt;a href="http://twitter.github.com/bootstrap/"&gt;Twitter bootstrap&lt;/a&gt; 2.0. In short, &lt;a href="http://twitter.github.com/bootstrap/"&gt;Twitter bootstrap&lt;/a&gt; is a
great way to get HTML5-CSS3-JavaScript up and running with a lot of the
hard work already done.&lt;/p&gt;
&lt;p&gt;The project comes with a heap of customization options and a full
complement of Less files which compile down to CSS. If you haven't
checked out &lt;a href="http://lesscss.org/"&gt;Less&lt;/a&gt;, you really ought to as it makes CSS dev much
saner.&lt;/p&gt;
&lt;p&gt;I have set-up a lab page for experiments, tests,
projects-that-are-not-quite-done and my foray into game development. The
Caffeine lab is built with &lt;a href="http://twitter.github.com/bootstrap/"&gt;Twitter bootstrap&lt;/a&gt; and is definitely a
work in progress. The lab stuff will be in the lab link in the header.&lt;/p&gt;</summary></entry><entry><title>Working with Github Api v3</title><link href="http://michaelmartinez.in/working-with-github-api-v3.html" rel="alternate"></link><updated>2012-02-08T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-02-08:working-with-github-api-v3.html</id><summary type="html">&lt;p&gt;I was pleasantly surprised when I needed to use the &lt;a href="http://develop.github.com/p/general.html"&gt;Github API&lt;/a&gt; for a
project. The API is dead simple to use, retrive and iterate data for
almost any repo based stat you can imagine. This is just a quick and
dirty GET example that makes a list of all the repos I follow on Github.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;$( document ).ready( function () {

var html = &amp;quot;&amp;quot;;
$.ajax( {
  url : &amp;quot;https://api.github.com/users/MichaelMartinez/watched&amp;quot;,
  dataType : &amp;quot;jsonp&amp;quot;,
  success : function ( returndata ) {
    $.each( returndata.data, function ( i, item ) {
      html += &amp;#39;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39; + this.html_url + &amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39; + this.name + &amp;#39;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&amp;#39; + &amp;#39;Description: &amp;#39; + this.description + &amp;#39;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&amp;#39; + &amp;#39;Language: &amp;#39; + this.language + &amp;#39;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&amp;#39; + &amp;#39;Updated: &amp;#39; + this.updated_at + &amp;#39;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;&amp;#39; + &amp;#39;Owner: &amp;#39; + this.owner.login + &amp;#39;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&amp;#39; +
        &amp;#39;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&amp;#39;;
    } );
    $( &amp;#39;#result&amp;#39; ).append( html );
  }
} );
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;} );&lt;/p&gt;</summary></entry><entry><title>Vacation Hour Tracker App</title><link href="http://michaelmartinez.in/vacation-hour-tracker-app.html" rel="alternate"></link><updated>2012-01-23T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-01-23:vacation-hour-tracker-app.html</id><summary type="html">&lt;p&gt;Most of us deal with some aspect of our job/career that isn't directly
under our control. For those who do not know, I am a firefighter for a
medium to large metropolitan fire department that is located 1.5 hours
south of Phoenix, Az. There are many of aspects in my job that I have
very little control over.&lt;/p&gt;
&lt;p&gt;Recently, I was charged for three days of vacation time that I did not
take. I have to admit that I caught the error by mistake as I generally
glance at the number of hours without much thought. When I realized the
error, I decided to go back and inspect the last six months and I found
two more errors... Which prompted another 6 months of inspection and one
more error.&lt;/p&gt;
&lt;p&gt;I really don't want to painstakingly evaluate and cross reference my pay
stub to our staffing software for correctness every two weeks. That
isn't exactly my idea of a good time. So I wrote this little application
that should, in theory, be my ever watchful vacation hour sentry. As a
great by product of writing this app, I investigated several javascript
MV* / MVVM frameworks and various libraries.&lt;/p&gt;
&lt;p&gt;The libraries used for this app are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/brianleroux/Cordova"&gt;Phonegap / Cordova - Phone version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SteveSanderson/knockout"&gt;Knockoutjs - MVVM Framework / Data Binding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jquerymobile.com"&gt;jQuery Mobile - 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andris9/jStorage"&gt;jStorage - localStorage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/timrwood/moment"&gt;Momentjs - JavaScript Date Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/mobiscroll/"&gt;Mobiscroll jQuery Mobile plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zend Framework GData Library - PHP&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;
The file tree and code are completely UGLY and it is not
my prettiest work to be sure. So when you go snooping around the
src remember I've been HACKING on this like crazy. I have three or four
implementations of this app contained within the asset/www file so be
sure to snoop around and look at the backbone version and vanilla jQuery
mobile version.&lt;/p&gt;
&lt;p&gt;I chose to go with Knockout for a variety of reasons for the main app.
The big reason was that it works with my brain and I was able to
accomplish a ton with very little boilerplate. I really eff'ing hate
boilerplate. I watched several Backbone tutorials and I read countless
lines of Backbone code and I was (am?) still pretty much lost. It made
me work way too hard to get basic functionality. I had several "aha"
moments with Backbone... only to have them stuffed in my pie-hole
minutes later. Not a good experience but I plan on re-visiting Backbone
in the future.&lt;/p&gt;
&lt;p&gt;I'll have several follow on posts regarding this app in the coming days.
I will also spend some time styling this app as its is default to a
fault right now using non-standard icons and Adobe Fireworks. I can post
that as a tutorial if there is interest.&lt;/p&gt;
&lt;p&gt;Here is the fully functional app (tested with Safari 5+, Firefox 9,
Chrome 16 on Mac):&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt; this page will be updated soon as I transition to new blog software&lt;/p&gt;</summary></entry><entry><title>LocalStorage with Knockout.js - jQuery Mobile - jStorage</title><link href="http://michaelmartinez.in/localstorage-with-knockoutjs-jquery-mobile-jstorage.html" rel="alternate"></link><updated>2012-01-15T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2012-01-15:localstorage-with-knockoutjs-jquery-mobile-jstorage.html</id><summary type="html">&lt;p&gt;I recently started evaluating various JS libraries/frameworks and other
JavaScript goodies. I just wanted to post a quick tutorial when working
with Phonegap (Cordova) &lt;a href="http://jquerymobile.com/"&gt;jQuery Mobile&lt;/a&gt; and &lt;a href="http://knockoutjs.com/"&gt;Knockout.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This project uses;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://incubator.apache.org/projects/callback.html"&gt;Cordova&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jquerymobile.com/"&gt;jQuery Mobile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://knockoutjs.com"&gt;Knockout.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jstorage.info/"&gt;jStorage&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;

&lt;p&gt;Set a binding to a click event on the view model you want to save:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* GLOBAL VAR &amp;amp; CLICK HANDLER/FUNCTION TO STORE ViewModel */&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;viewSaveID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;saveThisViewModel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// check to see if jStorage has items&lt;/span&gt;
    &lt;span class="c1"&gt;// if not, assign 0 to key otherwise assign count number &lt;/span&gt;
&lt;span class="c1"&gt;// as items are save chronologically and not overwritten&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;viewSaveID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;viewSaveID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// increment counter for key to localStorage&lt;/span&gt;
    &lt;span class="nx"&gt;viewSaveID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;viewSaveID&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Set data to JS format could also be ko.toJSON for a JSON object&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ko&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toJS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// on the dollar save via jStorage&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;viewSaveID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// return true to keep default behavior in app&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next I would like to show you how we get the data. Although this
implementation looks incredibly simple, I went through a bunch of
implementations to arrive at this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* Get Data From Storage and save it to Array */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getDataStore&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// assign the keys of the jStorage index to an observable array&lt;/span&gt;
    &lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myDataStoreIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="c1"&gt;// check to see if there are items in the data store array&lt;/span&gt;
&lt;span class="c1"&gt;// if yes, remove them &lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myDataStore&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// This may not scale well, but for localStorage, we don&amp;#39;t need it too.&lt;/span&gt;
&lt;span class="c1"&gt;// the problem is overwriting and double entries, this little diddy solves both&lt;/span&gt;
        &lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myDataStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;removeAll fired&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;//create a temp object to hold objects that are saved in storage&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;savedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="c1"&gt;// iterate through the array of keys&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myDataStoreIndex&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// pull the objects from storage based on the keys stored in the array&lt;/span&gt;
        &lt;span class="nx"&gt;savedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;jStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myDataStoreIndex&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// push the saved object to the observable array&lt;/span&gt;
        &lt;span class="nx"&gt;myViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myDataStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;savedData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Data has been pushed to vacDataStore &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; times.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// when you iterate on a list view item in jQuery Mobile &lt;/span&gt;
&lt;span class="c1"&gt;// you have refresh the list. Otherwise it displays incorrectly&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#myListView&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;listview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;refresh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now all you need to do is work with the data in the myDataStore
Observable array. I choose to iterate the objects into a list using the
convient foreach and a template. The code is commented and should be
self explanatory. If you have issues or need further clarification don't
hesitate to comment. I will post the full app soon!&lt;/p&gt;</summary></entry><entry><title>JavaScript and teh new year...</title><link href="http://michaelmartinez.in/javascript-and-teh-new-year.html" rel="alternate"></link><updated>2011-12-30T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-12-30:javascript-and-teh-new-year.html</id><summary type="html">&lt;p&gt;Amazing.&lt;/p&gt;
&lt;p&gt;It is really quite amazing what you can get accomplished with Javascript
once you wrap mind around its subtleties. I am there. I'm launching
something quite new in the next week or so.... a sort of repository.&lt;/p&gt;
&lt;p&gt;I will have my very own LABS page in the coming days. I will post
demo's, odds &amp;amp; ends there with full descriptions and tutorials here.
Keep your eyes peeled.&lt;/p&gt;
&lt;p&gt;The apps/market playground is quite fun and I'm not done there yet. The
inevitable consolidation of the various app markets is underway, and the
great migration to the next &lt;em&gt;wild west&lt;/em&gt; is taking place once again.&lt;/p&gt;
&lt;p&gt;The beauty in this consolidation is that it always lags and never fails
to not materialize ( ? double negative === falsy : sue me :) )... except
in one arena: teh internetz.&lt;/p&gt;
&lt;p&gt;( My Dad told me to never use always, and to always remember that).&lt;/p&gt;
&lt;p&gt;So where is the next gold rush? Who knows! Who cares? I'm having so much
fun playing with the power of Javascript that I could care less. I just
want to be "better" and that is all I'm working on right now, in
multiple avenues.&lt;/p&gt;
&lt;p&gt;In any case, its late and I've been pounding away on a cool
cross-platform application (TBA soon). See you next year!&lt;/p&gt;</summary></entry><entry><title>PhoneGap/Callback 1.3.0 - USE IT!</title><link href="http://michaelmartinez.in/phonegapcallback-130-use-it.html" rel="alternate"></link><updated>2011-12-17T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-12-17:phonegapcallback-130-use-it.html</id><summary type="html">&lt;p&gt;PhoneGap 1.2.0 broke apps when used on devices with Ice Cream Sandwich /
Android 4.0.* The &lt;meta&gt; tag was being ignored I.e.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width=device-width, initial-scale=1.0, &lt;/span&gt;
&lt;span class="s"&gt;minimum-scale=1.0, user-scalable=no&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is not parsed by the browser in PG 1.2.0, or is parsed and parsed
incorrectly which made the viewport appear to be very zoomed out.
Whichever case it may be, this is not good for the apps out there using
the amazing Phonegap. I filed a JIRA ticket on the &lt;a href="https://issues.apache.org/jira/browse/CB-131"&gt;Apache JIRA Callback
site.&lt;/a&gt; I was informed by Brion Vibber that 1.3.0 was fixing the issue
and that it had been tagged in git. Alright!&lt;/p&gt;
&lt;p&gt;So what do you do?&lt;/p&gt;
&lt;p&gt;Well, I cloned PhoneGap from here: https://github.com/callback/phonegap&lt;/p&gt;
&lt;p&gt;You then have two options; Build it using Ant or Build it using Eclipse
or similar IDE&lt;/p&gt;
&lt;p&gt;I think using a pure Ant is the easiest and I'll explain it here:&lt;/p&gt;
&lt;p&gt;​1. Download latest PhoneGap/Callback from git&lt;/p&gt;
&lt;p&gt;​2. Make a local.properties with SDK directory with this snippet:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;sdk.dir&lt;span class="o"&gt;=&lt;/span&gt;/Developer/Development/android-sdk-mac_x86
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;​3. Then in terminal, navigate (cd /blah/blah) to the "framework"
directory within the Callback directory&lt;/p&gt;
&lt;p&gt;​4. type "ant jar" (Hopefully you get no build.xml errors)&lt;/p&gt;
&lt;p&gt;​5. Done&lt;/p&gt;
&lt;p&gt;The other way is not significantly more difficult but involves more
steps. If all you need is the PhoneGap Jar and *.js Use the "pure" ant
method. If you want to have a play with the source then by all means use
the IDE to build the file. I will explain it if there is demand.&lt;/p&gt;</summary></entry><entry><title>Flex, Flash, Spoon and the road ahead....</title><link href="http://michaelmartinez.in/flex-flash-spoon-and-the-road-ahead.html" rel="alternate"></link><updated>2011-11-17T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-11-17:flex-flash-spoon-and-the-road-ahead.html</id><summary type="html">&lt;p&gt;I just had to brain vomit this....&lt;/p&gt;
&lt;p&gt;​1. Flex relies on the Flash Player and/or Air, correct? Without
constant tight integration between Spoon and the Flash Player... I think
Flex is heading down a troubled road with a stormy horizon around 1, 2
or 3 years from now.&lt;/p&gt;
&lt;p&gt;You can innovate until you are blue in the face, but you need deep
integration into the Flash Player to make things work even halfway
decently. Lets face it, Flex has been a bit of a dog in performance. It
has issues like the rest of the software world, but now it lacks
significant engineering efforts.&lt;/p&gt;
&lt;p&gt;Is this situation going to materially improve in the next 6 months? Will
it be better or worse without heavy, heavy Flash player integration? How
will that be accomplished given Adobe needs to focus like they've never
focused on their new SaaS offerings among other treats outlined in the
linked document?&lt;/p&gt;
&lt;p&gt;​2. Enterprise was the leading innovation context for a long time, this
is changing! Are we not at all concerned that a consumer driven
revolution in productivity and innovation will change Enterprise?&lt;/p&gt;
&lt;p&gt;Furthermore, we are seeing a lot more of; "Here is my iPad, now make it
work!" from the CEO's through Mobile Sales to IT. This is a major shift
and its accelerating. Many are starting to say that for the first time,
consumer tech will drive enterprise tech going forward.&lt;/p&gt;
&lt;p&gt;I see a lot of Flex folks saying; "Enterprise will save us!" Maybe.
Economic conditions are changing very rapidly from governments to
bakeries. Radical divergence from the status quo will be common place in
tech. I've seen an iPad in a fire truck.&lt;/p&gt;
&lt;p&gt;​3. What a lot of people fail to realize is Adobe is in a bit of trouble
financially speaking. They have revised enterprise growth down every
quarter and "legacy" (*cough*) projections look tepid at best. See
here:&lt;/p&gt;
&lt;p&gt;http://www.adobe.com/aboutadobe/invrelations/2011_analyst_mtg/pdfs/FA2011_web_MarkGarrett.pdf&lt;/p&gt;
&lt;p&gt;Their strategy is to focus on the marketer and boost subscription rates
to meet top line growth. They are literally betting the farm on
subscriptions and marketing. That doesn't sound "enterprise-y",
"flash-y" or "flex-y" to me.&lt;/p&gt;
&lt;p&gt;​4. They will try to move the creative seats to a subscription based
model in the next three years. OUCH! I fucking hate subscriptions,
everyone and their mother wants a \$5 dollar a month (or more) deduction
from my checking account! Obviously, I don't believe in this model.&lt;/p&gt;
&lt;p&gt;I'm sure if I can see the following, many others have as well. The
market is ripe for Adobe to get upstaged in their legacy apps (PS, AI,
FW). What I'm trying to say is, nothing lasts forever and this company
is in an awkward place right now.&lt;/p&gt;
&lt;p&gt;I like seeing the glass half full, but there are way larger forces at
work here. We are fool hardy to accept them at face value with no
further consideration.&lt;/p&gt;</summary></entry><entry><title>Adobe Changes Course</title><link href="http://michaelmartinez.in/adobe-changes-course.html" rel="alternate"></link><updated>2011-11-11T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-11-11:adobe-changes-course.html</id><summary type="html">&lt;p&gt;By now you've surely heard that Adobe has ceased all operations in
regard to the mobile browser Flash player. I can't say that I'm really
surprised, but I'm concerned with how they did it and what it means
long-term. It was apparently out-of-the-blue for not only the public but
also the 750 employees that were let go.&lt;/p&gt;
&lt;p&gt;That really sucks for the guys/gals who were let go on such short
notice. I know that is one of my biggest fears and I completely
empathize with them. The response from the likes of &lt;a href="http://sfdesignerdw.wordpress.com/2011/11/10/thoughts-on-stuff-and-things-adobe"&gt;Doug Winnie&lt;/a&gt;show
enormous restraint and passion. It makes one wonder how someone with
that kind of dedication and passion was let go. The biggest take away
here, in my opinion, is that nothing is sacred and everything is open
for negotiation. Good and bad.&lt;/p&gt;
&lt;p&gt;Now what?&lt;/p&gt;
&lt;p&gt;As many of you know, I recently went all-aboard the ActionScript 3 train
via AIR for mobile devices. I'm rattled.&lt;/p&gt;
&lt;p&gt;The web was abuzz with all kinds of vitriolic drivel from the likes of
mostly Apple fanboi's. &lt;em&gt;"Steve was right!"&lt;/em&gt; is completely and 100%
bullshit. We know that from the reading the &lt;em&gt;&lt;a href="http://www.amazon.com/Steve-Jobs-Walter-Isaacson/dp/1451648537"&gt;Walt Isaacson book&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I am rattled, however. I ~~knew~~know learning and using a proprietary
solution is dangerous. I saw what happened to the Microsoft Silverlight
developers as they were promised the world only to have the rug pulled
out from under them in one OS release cycle (Win 7 -&gt; Win 8). Those
Silverlight devs that saw it coming but continued to stay the course
based on the promise of support are now &lt;a href="http://forums.silverlight.net/t/230725.aspx/1?Windows+8+apps+going+html5+wtf+part+2"&gt;really angry (22 million views?
Wow!)&lt;/a&gt; and have every right to be.&lt;/p&gt;
&lt;p&gt;So, the question(s) are; Are we ActionScript 3 and Air developers now
armed with the same foresight? Is the entire Flash ecosystem on the
chopping block? Is Air next as the great migration from Desk to Mobile
continues unabated?&lt;/p&gt;
&lt;p&gt;I do not have the will power nor the inclination to really debate this.
Frankly, at this point I want to use the least proprietary solution
available. I don't trust the IT corporations to have, ultimately, my
best interest at heart. Nor are they supposed to, as the bottom line is
what keeps the electricity on and paychecks coming. Adobe made a tough
decision and they should have handled it better on the employee end.
However, make no mistake, this decision took guts and was the right
thing to do from a business standpoint.&lt;/p&gt;
&lt;p&gt;My stay in the ActionScript sphere of influence was very short lived. I
enjoyed learning it and the community was really nice and helpful which
was a total bonus. This is the end of my ActionScript days and the
beginning of my JavaScript days for cross platform mobile development. I
welcome my new prototypical based overlords with open arms. Now where is
that &lt;a href="http://javascript.crockford.com/"&gt;Crockford&lt;/a&gt; book that i threw against the wall in disgust a year
ago?&lt;/p&gt;
&lt;p&gt;I had real trouble with my last attempts to become a Javascript ninja. I
like classes and encapsulation. All that is needed is a resolve to try
harder.&lt;/p&gt;</summary></entry><entry><title>Exciting times, choosing a platform!</title><link href="http://michaelmartinez.in/exciting-times-choosing-a-platform.html" rel="alternate"></link><updated>2011-10-03T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-10-03:exciting-times-choosing-a-platform.html</id><summary type="html">&lt;p&gt;As I sit here and write this post; I have an ActionScript 3 project
open, a Flash Pro project open and a vanilla Java project open. Earlier
I was working in Xcode on an HTML5/JavaScript &lt;a href="http://phonegap.com/"&gt;Phonegap&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;I know what you are thinking; "This dude is a freakin' badass!" HA! Rest
assured that I'm merely ~~enthusiatic~~ crazy about technology and more
specifically UI/UX and programming (and my children, but this blog is
about tech, not diapers). I'm living and eating this stuff when the kids
are sleeping or out and about.&lt;/p&gt;
&lt;p&gt;There is a bit of a problem, however. I would really, really like to
focus on a core programming language and/or platform. I want to be a
Jedi master of the most ubiquitous, most loved and most profitable
language and platform. In this day and age its a fools errand, a pipe
dream and the emperor has no clothes.&lt;/p&gt;
&lt;p&gt;Lots of geek pundits have said, "Just focus on iOS and be merry." Yes...
but. There is always a "but" and I would be remiss to leave out the
other exciting platforms. After all, my Android phone got me into this
whole mess and Android is still growing like gangbusters. My problem,
essentially, is that I want my cake and too eat it too. Another silly
cop-out, eh?&lt;/p&gt;
&lt;p&gt;I need something that will work on a variety of platforms with
essentially one code base. As a one man shop with limited time, I don't
have the luxury of coding every platform in its native tongue. I would
LOVE to be that BADASS, but I'm not anywhere near that level. I need to
work where I'm comfortable and productive from 8pm to midnight. I have a
full-time job and diapers to change, I don't want to fight with
something I enjoy doing in the hopes to make a quick buck; that simply
isn't worth it.&lt;/p&gt;
&lt;p&gt;So I went down the cross platform path to see what I could find;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://phonegap.com/"&gt;Phonegap&lt;/a&gt; as mentioned previously is righteous. It works and it works
well. The bonus is I get to use the skills I've aquired from years of
HTML and javascript ~~developing~~ hacking websites. There are some
nagging performance issues outside of Phonegap based on the libraries
one chooses. JQuery Mobile is NOT ready for prime time. In fairness to
JQuery Mobile, its still in beta and has some serious corporate backing
with Adobe and Microsoft. So it "should" be really good in time.&lt;/p&gt;
&lt;p&gt;Sencha Touch looks great but will require a significant investment to
learn. The same can be said for Appcelerator Titanium. These
frameworksfor mobile development are basically javascript only and have
a very specific (and different) ways of doing things. There are lots of
reports of strong support for iOS and lacking support for Android with
both. I can't comment directly on the issues with Sencha or Titanium as
I have not used them for any length of time. However, the comments and
blogs are there and in your face when you start to research.&lt;/p&gt;
&lt;p&gt;The over arching problem with all of these is the dependence on the
mobile browser. The very thing that made my want to stab myself in the
ear with a pencil while developing websites, rears its ugly little head
in this domain. This much is clear; All of the DOM manipulating cross
platform solutions are dependent on the mobile browser. These browsers
can vary widely and wildly from device to device. Android developers
think fragmentation is bad, add another layer of abstraction and OEM
specific implementations and you have some serious pain coming your way.&lt;/p&gt;
&lt;p&gt;The only other game in town for cross platform mobile development is
with Adobe and the Flash-FLEX / Air combo. The Flash apps I have built
and tested for mobile just flat out work. They look great and you get to
use a class based, statically typed language to build them in
ActionScript 3. What is the downside? Reach! The good news is I can
target iOS and Android with basically the same code base, but that is it
(I will not mention the Blackberry Playbook as its sales look dismal,
oops (I went there).&lt;/p&gt;
&lt;p&gt;So the moral of this story is almost every solution has real, bonafide
merits and warts and it you came to this article looking for the magic
bullet... I apologize. You see, the magic platform with everything YOU
want including buckets of money does NOT exist. There is an old adage
that I read a lot on stackoverflow and tech-religious pieces; &lt;strong&gt;Choose
the right tool for the job.&lt;/strong&gt; When people are choosing a path, this is
the last thing they want to hear... and I understand the angst. However,
this piece of advice is pure gold and everyone should take it to heart.&lt;/p&gt;
&lt;p&gt;I have come to realize my, sometimes unhealthy, curiosity is both a
blessing and a curse... but mostly pure blessing. I like learning new
things and often get tired of "same" ( which is part of the reason my
day job is a riding around in a fire engine, no day is ever the same.)
Timing will always be a challenge as the IT industry moves at break-neck
pace. With a healthy curiosity and a good method to learn, I think its
possible to get on board and make a difference.&lt;/p&gt;</summary></entry><entry><title>Another MadComponent Logo...</title><link href="http://michaelmartinez.in/another-madcomponent-logo.html" rel="alternate"></link><updated>2011-09-16T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-09-16:another-madcomponent-logo.html</id><summary type="html">&lt;p&gt;And here is number 2:&lt;/p&gt;
&lt;p&gt;&lt;img alt="MadComponent-Dos" src="http://caffeineindustries.com/wp-content/uploads/2011/09/MCSecondLegoStyleExPNG.png" /&gt;&lt;/p&gt;</summary></entry><entry><title>MadComponents Logo</title><link href="http://michaelmartinez.in/madcomponents-logo.html" rel="alternate"></link><updated>2011-09-14T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-09-14:madcomponents-logo.html</id><summary type="html">&lt;p&gt;Daniel thought it may be a good idea to come up with a logo. I'm always
keen to have a go at some design work. This is what I came up with:&lt;/p&gt;
&lt;p&gt;&lt;img alt="MadComponentsLogo" src="http://caffeineindustries.com/wp-content/uploads/2011/09/crazyRobotJACKET.png" /&gt;&lt;/p&gt;</summary></entry><entry><title>AS3 MadComponents Tutorial Series - Tablet and Phone in One!</title><link href="http://michaelmartinez.in/as3-madcomponents-tutorial-series-tablet-and-phone-in-one.html" rel="alternate"></link><updated>2011-09-12T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-09-12:as3-madcomponents-tutorial-series-tablet-and-phone-in-one.html</id><summary type="html">&lt;p&gt;This tutorial will demonstrate both tablet and phone layout in one
ActionScript 3 Flash application for mobile. We will utilize the
powerful &lt;a href="http://madskool.wordpress.com/"&gt;MadComponents library&lt;/a&gt; to quickly and easily add an amazing
spilt screen view for the tablet. Then we will basically recycle the
phone tutorial shown in the previous &lt;a href="http://caffeineindustries.com/?p=234"&gt;separation of concerns
tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tablets such as the iPad and Android variants have quite a bit more
screen real estate to work with. We can literally replicate a desktop
experience with the tablet resolutions we are seeing today. So what
should we do with all of this real estate? The answer to that question
is; It depends. I know that is a bit of a cop-out, but we can not
realistically attempt to cover every situation.&lt;/p&gt;
&lt;p&gt;This app will determine the screen resolution and choose the best layout
to initialize. The table will utilize the popular split-view pattern for
the tablet with a list control on the left side and content on the
right. The phone layout consists of list based navigation as shown in
the previous &lt;a href="http://caffeineindustries.com/?p=234"&gt;example.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DISCLAIMER: The colors used are ATROCIOUS. I did this to make absolutely
sure the tutorial-ee can see what colors are used and where. Its a bit
confusing and you'll need to experiment anyway.&lt;/p&gt;
&lt;p&gt;The SRC files can be downloaded &lt;a href="http://www.mediafire.com/file/d4sbql4o0x44uhd/src.zip"&gt;HERE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lets get this party started:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;package&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.danielfreeman.madcomponents.&lt;/span&gt;&lt;span class="o"&gt;*;&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.desktop.NativeApplication&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.Sprite&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.StageAlign&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.StageScaleMode&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.Event&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.MouseEvent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.system.Capabilities&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.ui.Keyboard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="n"&gt;SplitViewMAD&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Sprite&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//////////////////////////// DATA FOR BOTH APPLICATIONS ////////////////////////////&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;DATA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;List Item 1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;List Item 2&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;List Item 3 (this wrapping text; test test test test)&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;List Item 4&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;//////////////////////////// END DATA //////////////////////////////////////////////&lt;/span&gt;

    &lt;span class="c1"&gt;/////////////////////////// TABLET XML DEFINITION //////////////////////////////////    &lt;/span&gt;
        &lt;span class="c1"&gt;// List can also be masked for a wrapping effect&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;SPLITVIEW&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="n"&gt;stageColour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#A15D6F&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myCols&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;gapH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;widths&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;36%, 64%&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#707449&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vertical&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myScroll&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#E4D1B0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myList&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#c10000&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;autoLayout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#D66821&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="sr"&gt;/&amp;gt;{DATA}&amp;lt;label id=&amp;quot;label&amp;quot; alignH=&amp;quot;fill&amp;quot;/&amp;gt;&amp;lt;/list&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;vertical&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myPages&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;{&lt;/span&gt;&lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT&lt;/span&gt;&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT1&lt;/span&gt;&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;Page2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT2&lt;/span&gt;&lt;span class="o"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;Page3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT3&lt;/span&gt;&lt;span class="o"&gt;}&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;/////////////////////////// END TABLET ///////////////////////////////////////////////&lt;/span&gt;

    &lt;span class="c1"&gt;/////////////////////////// PHONE XML DEFINITIONS ///////////////////////////////////&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;LIST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#999999&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="sr"&gt;/&amp;gt;{DATA}&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Each additional &amp;quot;Page&amp;quot; needs to have different id&amp;#39;s for the components, even when they are separated into separate classes&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;NAVIGATION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;navigation&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#C100000&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;clickColour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#C100000&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Phone Nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;LIST&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT1&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Page2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT2&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Page3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT3&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;UINavigation&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;UIList&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;////////////////////////////// END PHONE //////////////////////////////////////////////&lt;/span&gt;

    &lt;span class="c1"&gt;///////////////////////////// INDEPENDENT CLASS VARS ////////////////////////////////// &lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_resY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;screenResolutionX&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_resX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;screenResolutionY&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_dpi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Capabilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;screenDPI&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;///////////////////////////// END CLASS VARS //////////////////////////////////////////&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The comments should visually separate the XML. The order in which you
define this data is absolutely inconsequential.&lt;/p&gt;
&lt;p&gt;The DATA constant is used for both layouts. I'm quite sure there are a
myriad of optimizations you could make here, but I wanted to make this
as clear as possible for the uninitiated.&lt;/p&gt;
&lt;p&gt;Lets concentrate on the SPLITVIEW constant for a bit. The root node or
tag is &lt;strong&gt;columns&lt;/strong&gt;. We can use any numbers we like here. 36% for the
left column and 64% for the right looked good on my Galaxy Tab 10.1
Android tablet.&lt;/p&gt;
&lt;p&gt;After columns, you'll see the &lt;vertical&gt; node and it is the container
for the left column. I choose to define the list here. You can get
really creative and add images and/or other components in this column.
The main thing to consider is text wrapping. If you aren't careful or
have long labels, the text will spill onto the next column. In this
case, I set &lt;strong&gt;autoLayout = true&lt;/strong&gt; in the list node. Then we define the
actual label node contained in the DATA constant with this tag; \&amp;lt; label
id="label" alignH="fill" /&gt;. This will make your text wrap nice and
neat.&lt;/p&gt;
&lt;p&gt;The right column is defined in the \&amp;lt; pages &gt; node. This, again, can be
any node you'd like for your particular application but page worked well
for this example. Note that we once again defined our pages outside this
class and call them by their LAYOUT constant, then initialize them in a
later method. You don't need to specify LAYOUT followed by a number, as
LAYOUT or any other name will work just as well. I do that because,
again, my brain works best with everything separated as cleanly as
possible.&lt;/p&gt;
&lt;p&gt;The independent class vars grab the screen resolution in the X and Y
axis and also provide the screen DPI. This will enable us to make the
right decision on which layout we like to display.&lt;/p&gt;
&lt;p&gt;Lets move onto the constructor:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;//////////////////////////// CONSTRUCTOR /////////////////////////////////////////////  &lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;SplitViewMAD&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Sprite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addChild&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;trace&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Screen Resolution is &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;_resX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;_resY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; at &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;_dpi&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ppi&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// support autoOrients&lt;/span&gt;
    &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;align&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StageAlign&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TOP_LEFT&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scaleMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StageScaleMode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;NO_SCALE&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// If the screen in the Y-axis is larger than 855px init tablet layout&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_resY&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;855&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;initializeTablet&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="c1"&gt;// If the screen in the Y-axis is smaller than 855px init Phone layout&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_resY&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;855&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//Register the back button listener in constructor before UI.create and all is well&lt;/span&gt;
    &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;KEY_DOWN&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;goBackButton&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;initializePhone&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This constructor simply chooses to initialize the phone or tablet based
on the resolution in the Y-axis. The number I decided to use for a break
over is 855px because I'm testing on the OG Droid-1 (480x854) and a
Galaxy 10.1 tablet (800 x 1290). I needed a way to make sure that the
proper layout is initializing (you know, that it actually works). A more
robust switch statement or if/else block is absolutely more appropriate
in a real world scenario based on the devices one is targeting.&lt;/p&gt;
&lt;p&gt;The only gotcha here is the physical Android back button in the
initializePhone block. The physical Android back button listener needs
to be called before UI.create, which is in the initializePhone method,
to work properly.&lt;/p&gt;
&lt;p&gt;In the interest of keeping all the logic available to copy and paste
here is the phone logic. Note: its not materially different than the
&lt;a href="http://caffeineindustries.com/?p=234"&gt;previous tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;////////////////////// PHONE ////////////////////////&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;initializePhone&lt;/span&gt;&lt;span class="o"&gt;():&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Create the main UI or &amp;quot;Landing Page&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NAVIGATION&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Initialize &amp;quot;views&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize &amp;quot;views&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Navigation layout and behaviour &lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UINavigation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;autoForward&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;autoBack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Change page handler&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CLICKED&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;navigationChange&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;navigationBar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MOUSE_UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;goBack&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// Nav back button color&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;navigationBar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Handles List item clicks&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;navigationChange&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;navIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Check to see if current page is @ 0 to set correct title&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Phone Nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// navigation logic &lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Page 1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Page 2&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Page 3&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Nav bar back button&lt;/span&gt;
&lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;goBack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;navIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Phone Nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nf"&gt;trace&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NavBar Event fired&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Device back button handler&lt;/span&gt;
&lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;goBackButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// With autoBack set to false, you lose the back button for some reason&lt;/span&gt;
    &lt;span class="c1"&gt;// You can use the Native App library to hard check a back button press&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;navIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;Keyboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BACK&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Phone Nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nf"&gt;trace&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Keyboard event fired&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;   
&lt;span class="c1"&gt;//////////////////////// END PHONE /////////////////////////////&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next we'll look at the tablet specific code:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;/////////////////////// TABLET ////////////////////////////////&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;initializeTablet&lt;/span&gt;&lt;span class="o"&gt;():&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Create the main UI or &amp;quot;Landing Page&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SPLITVIEW&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Initialize &amp;quot;views&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Add the list &lt;/span&gt;
    &lt;span class="n"&gt;_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UIList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myList&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CLICKED&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;changePage&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Add the pages component&lt;/span&gt;
    &lt;span class="n"&gt;_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myPages&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;changePage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// TODO: holder page @ index 0 in DATA constant so first page is 1 and second is two. Holder will have a cool logo or something&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Navigation logic &lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;////////////////////// END TABLET ////////////////////////////////&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We call UI.create and pass in the SPLITVIEW constant. This is the
MadComponents standard, so if don't get it... I suggest you to have a go
with the other tutorials on &lt;a href="http://madskool.wordpress.com/"&gt;Daniels&lt;/a&gt; site or
mine. Next, we initialize all the pages that reside outside of this
class, but are defined in the pages node.&lt;/p&gt;
&lt;p&gt;We need a way to capture the clicks for the list on the left. So we
instantiate a UIList variable to hold the list data. We then assign a
click listener to the list variable. We also need a mechanism to
navigate the pages once we've determined which list item has been
clicked. So, again we assign a UIPages variable to hold and act on that
data. This is all handled in the changePage event handler which is
relatively self explanatory. I'm still working on the Android back
button for this block. I will update it once I get it handled.&lt;/p&gt;
&lt;p&gt;I hope this helps you visualize what is possible with tablets and the
ActionScript3 MadComponent Library. Expect more tutorials to follow!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a screen shot of the tablet running this app:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tablet Split View" src="http://caffeineindustries.com/wp-content/uploads/2011/09/splitviewtablet800.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a screen shot of the phone running this app:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Phone Split View" src="http://caffeineindustries.com/wp-content/uploads/2011/09/device-2011-09-12-134809.png" /&gt;&lt;/p&gt;</summary></entry><entry><title>AS3 MadComponents Tutorial Series - Separation of Concerns</title><link href="http://michaelmartinez.in/as3-madcomponents-tutorial-series-separation-of-concerns.html" rel="alternate"></link><updated>2011-09-04T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-09-04:as3-madcomponents-tutorial-series-separation-of-concerns.html</id><summary type="html">&lt;p&gt;Best practices for programming tell us separation of concerns,
encapsulation and modularity are desirable in most, but not all,
application contexts. A complex app with many views and/or items could
quickly get out of control in a plethora of ways within
the monolithic class context.&lt;/p&gt;
&lt;p&gt;The project I'm working on has nearly 50 separate views and consist of
mostly textual data. So my first task was learning the method(s) to
separate class files the &lt;a href="http://code.google.com/p/mad-components/"&gt;MadComponent&lt;/a&gt;way. This example will be quite
simple but will illustrate how one would go about using different AS
class files to separate concerns.&lt;/p&gt;
&lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;User Story:&lt;/strong&gt;&lt;/span&gt; A list
based component is chosen by the user. This item navigates to a
"details" page or another component with more data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lets build the "landing page" or main application page;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First the XML layout:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;public class SeparateClassExample extends Sprite{

    protected static const DATA:XML = &lt;span class="nt"&gt;&amp;lt;data&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Page 0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;item&lt;/span&gt; &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Page 1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;;

    protected static const LIST:XML = 
        &lt;span class="nt"&gt;&amp;lt;list&lt;/span&gt; &lt;span class="na"&gt;colour=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#999999&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;background=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;search&lt;/span&gt; &lt;span class="na"&gt;colour=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;field=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;{DATA}&lt;span class="nt"&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;;

    //Important
    protected static const NAVIGATION:XML = 
        &lt;span class="nt"&gt;&amp;lt;navigation&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;nav&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;colour=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#C100000&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {LIST}
        {Page0.LAYOUT}
        {Page1.LAYOUT}
        &lt;span class="nt"&gt;&amp;lt;/navigation&amp;gt;&lt;/span&gt;;

    protected var _uiNavigation:UINavigation;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The DATA constant simply defines the items that will populate the list.
The LIST constant accepts the DATA constant and applies some basic
formatting, Ie. colour (note the UK spelling). We also implement the
search feature here which will filter the list based on the item's
label. (I have experimented with different search methods, but have been
unsuccessful thus far... we will explore this later).&lt;/p&gt;
&lt;p&gt;The NAVIGATION constant is actually the heart and soul of this simple
app. You can think of the NAVIGATION constant as an Array of data that
you define in XML and classes. As my astute readers will probably note
based on a quick glance. We haven't defined Page0, Page1 and you can't
spot LAYOUT anywhere. These are defined separate class files, although
not completely necessary, it helps me keep things organized.&lt;/p&gt;
&lt;p&gt;We declare the _uiNavigation instance or class level variable which
we'll define in subsequent steps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lets move on to the constructor:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;SeparateClassExample&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Sprite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addChild&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// support autoOrients&lt;/span&gt;
    &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;align&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StageAlign&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TOP_LEFT&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scaleMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StageScaleMode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;NO_SCALE&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Create the main UI or &amp;quot;Landing Page&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NAVIGATION&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Initialize &amp;quot;views&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Navigation layout and behaviour &lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UINavigation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;autoForward&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Must set to false otherwise the app scrolls through all the pages in the &amp;quot;stack&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;autoBack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Go to the &amp;quot;page&amp;quot; requested&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CLICKED&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;navigationChange&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Go Back using the Nav bar back button&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;navigationBar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MOUSE_UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;goBack&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Go back using the hardware back button&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;KEY_UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;goBackButton&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;navigationBar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The UI.create method instantiates the UI or "landing page" and all of
the code relating to the use of MadComponents must be implemented after
this method call. We initialize Page0 with a call to a public method
inside the Page0 class. This method can be named anything you like.&lt;/p&gt;
&lt;p&gt;We then instantiate the _uiNavigation variable to the NAVIGATION
constant defined at the class level through the id we can name
arbitrarily. We can now programmatically add formatting, assign event
listeners and so forth to the _uiNavigation variable.&lt;/p&gt;
&lt;p&gt;The first event listener UI.CLICKED will direct the navigation to the
"page" that is assigned to the index of the NAVIGATION constant. In this
case 0 is the list itself, while 1 and 2 will be Page0 and Page1
respectively.&lt;/p&gt;
&lt;p&gt;The second event listener is assigned to the navigationBar.backButton
and is a simple MouseEvent.MOUSE_UP event. As you will see, this event
will handle the back button that is added to the navigation bar once we
have navigated away from the main list.&lt;/p&gt;
&lt;p&gt;The third event listener is added to handle the device back button,
generally this is an Android device. I found through testing that if
autoBack is set to false, you lose back button functionality. In some
cases you may want the autoBack functionality, but its not appropriate
in this context as it will scroll through the stack of items defined in
the NAVIGATION constant. This event listener simply adds the devices
back button into the app.&lt;/p&gt;
&lt;p&gt;Daniel is working on documentation as we speak, but a good starting
place to learn about the framework are the PDF(s) included on the
&lt;a href="http://code.google.com/p/mad-components/downloads/list"&gt;download page&lt;/a&gt;. You can see what I've done to customize the
_uiNavigation variable based on the comments added into the code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now lets handle the events we declared in the constructor:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;navigationChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;navIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Check&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt; 0 &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;0&lt;span class="p"&gt;]){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Home&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;navigation&lt;/span&gt; &lt;span class="n"&gt;Stuff&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 0&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goToPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;1&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Page&lt;/span&gt; 0&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; 1&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goToPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;2&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Page&lt;/span&gt; 1&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;For&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Navigation&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;
    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;goBack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goToPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Home&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;With&lt;/span&gt; &lt;span class="n"&gt;autoBack&lt;/span&gt; &lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;lose&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;reason&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;You&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Native&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt; &lt;span class="n"&gt;library&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;button&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;
    &lt;span class="n"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;goBackButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;KeyboardEvent&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="n"&gt;void&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;Keyboard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BACK&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goToPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;0&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &amp;quot;&lt;span class="n"&gt;Home&lt;/span&gt;&amp;quot;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;       
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this example, I want the navigationChange event to take the user to
the page associated with the index they select. We let the gotoPage
method do all the heavy lifting and add a nice visual transition. Beyond
that the back button in the navigation bar and the device back button
(if available) simply takes the user back to the list. If you've
followed any of the tutorials mentioned in the starting out post, you
will not see anything surprising here. The exception is maybe the event
handler for the back button which is similar to the way one handles an
event on the decktop or web based flash application.&lt;/p&gt;
&lt;p&gt;A little gotcha I found is when you don't explicitly set the title, the
navigation component will leave the previous title in the navigation bar
despite the change. Checking to make sure its set correctly just adds a
bit of polish.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Now lets add the separate class "views" or Page0 and Page1:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;package&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.danielfreeman.madcomponents.&lt;/span&gt;&lt;span class="o"&gt;*;&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.Sprite&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.StageAlign&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.StageScaleMode&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.Event&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.system.Capabilities&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.text.TextField&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="n"&gt;Page0&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Sprite&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;LAYOUT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;scrollVertical&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message0&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;alignH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;scrollVertical&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;UILabel&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;Patient&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;():&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UILabel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;_message&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;htmlText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;b&amp;gt;App Considerations:&amp;lt;/b&amp;gt;&amp;lt;p&amp;gt;&amp;lt;li&amp;gt;Is it AWESOME?&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;Are you going to BroGram? Sup?&amp;lt;/li&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;lt;li&amp;gt;More Stuff&amp;lt;/li&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a basic page layout using HTML text. LAYOUT is the constant we
call from within the NAVIGATION constant in the Main class as you've
seen. If I may direct your attention to the constructor, notice that
UI.create is not used here. In this case, we "instantiate" the layout
through the public initialize method mentioned earlier. Also note, ID's
for the components for each page need to be different. Ie. Page0 label
has an id of "message0". Page1 will need a label id of "message1" to
work as one would expect. Flash requires string literals to be on the
same line. In my working app this line is almost ridiculously long, no
need to worry as the text will render as you've defined.&lt;/p&gt;
&lt;p&gt;This is the "MAIN" class in all its glory.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;package&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.danielfreeman.madcomponents.&lt;/span&gt;&lt;span class="o"&gt;*;&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.desktop.NativeApplication&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.Sprite&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.StageAlign&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.display.StageScaleMode&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.Event&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.events.MouseEvent&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;flash.ui.Keyboard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="n"&gt;SeparateClassExample&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Sprite&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;DATA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Page 0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Page 1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;LIST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#999999&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#DADED4&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="sr"&gt;/&amp;gt;{DATA}&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;// Each additional &amp;quot;Page&amp;quot; needs to have different id&amp;#39;s &lt;/span&gt;
        &lt;span class="c1"&gt;//for the components, even when they are separated into separate classes&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;NAVIGATION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;XML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;navigation&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;colour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#C100000&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;LIST&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LAYOUT&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;UINavigation&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;SeparateClassExample&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Sprite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addChild&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// support autoOrients&lt;/span&gt;
            &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;align&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StageAlign&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;TOP_LEFT&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;stage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;scaleMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StageScaleMode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;NO_SCALE&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="c1"&gt;// Create the main UI or &amp;quot;Landing Page&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NAVIGATION&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="c1"&gt;// Initialize &amp;quot;views&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;Page0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;Page1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

            &lt;span class="c1"&gt;// Navigation layout and behaviour &lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UINavigation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;findViewById&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;autoForward&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="c1"&gt;// Must set to false otherwise the app scrolls through all the pages in the &amp;quot;stack&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;autoBack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="c1"&gt;// Go to the &amp;quot;page&amp;quot; requested&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UIList&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CLICKED&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;navigationChange&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="c1"&gt;// Go Back using the Nav bar back button&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;navigationBar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MOUSE_UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;goBack&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="c1"&gt;// Go back using the hardware back button&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addEventListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;KEY_UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;goBackButton&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;navigationBar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;backButton&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;999999&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;navigationChange&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;navIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Check to see if current page is @ 0 to set correct title&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]){&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// navigation Stuff&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Page 0&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;navIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_LEFT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Page 1&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// For the back button in the Navigation bar&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;goBack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// With autoBack set to false, you lose the device back button for some reason&lt;/span&gt;
        &lt;span class="c1"&gt;// You can use the Native App library to check for a device back button event&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;function &lt;/span&gt;&lt;span class="nf"&gt;goBackButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;KeyboardEvent&lt;/span&gt;&lt;span class="o"&gt;):&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;keyCode&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;Keyboard&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;BACK&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;goToPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UIPages&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SLIDE_RIGHT&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;_uiNavigation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>AS3 MadComponents Tutorial Series - Starting Out</title><link href="http://michaelmartinez.in/as3-madcomponents-tutorial-series-starting-out.html" rel="alternate"></link><updated>2011-09-02T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-09-02:as3-madcomponents-tutorial-series-starting-out.html</id><summary type="html">&lt;p&gt;&lt;a href="http://madskool.wordpress.com/" title="MadComponents-Blog"&gt;MadComponents&lt;/a&gt; is an AWESOME ActionScript 3 library for mobile UI
design and App development. It is really lightweight, fast and doesn't
use any of the FLEX framework*. MadComponents provides all the tools to
make really nice functional mobile apps with Flash. One can choose to
use pure ActionScript or use a combination of AS3 and XML. The XML
implementation with MadComponents provides a clean method to populate
and define the UI. If one comes from a background in Android development
this will look very logical.&lt;/p&gt;
&lt;p&gt;Daniel Freeman, the library author, has a nice collection of tutorials
on his blog: http://madskool.wordpress.com/ I'll list them in this post
and attempt to extend them in subsequent posts.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/06/20/tutorial-1-fb-4-5-hello-world-done-the-madcomponents-way/" title="Tutorial 1: FB 4.5 Hello World – done the MadComponents way"&gt;Tutorial 1: FB 4.5 Hello World – done the MadComponents way&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/06/23/tutorial-2-images-and-nine-patch-images-in-madcomponents/" title="Tutorial 2: Images, and Nine Patch Images in MadComponents"&gt;Tutorial 2: Images, and Nine Patch Images in MadComponents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/06/30/tutorial-3-lists-and-pickers/" title="Tutorial 3: Lists and Pickers"&gt;Tutorial 3: Lists and Pickers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/07/01/tutorial-4-building-a-mobile-twitter-client/" title="Tutorial 4: Building a mobile twitter client"&gt;Tutorial 4: Building a mobile twitter client&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/07/13/tutorial-5-deploying-to-mobile-devices/" title="Tutorial 5: Deploying to mobile devices"&gt;Tutorial 5: Deploying to mobile devices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/07/18/tutorial-6-more-madcomponents/" title="Tutorial 6: More MadComponents"&gt;Tutorial 6: More MadComponents&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/07/25/tutorial-7-madcomponents-amf-service-test-drive-for-mobile/" title="Tutorial 7: MadComponents AMF Service Test Drive for Mobile"&gt;Tutorial 7: MadComponents AMF Service Test Drive for Mobile&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://madskool.wordpress.com/2011/07/28/extendedmadness-more-components-and-charts-for-mobile-developers/" title="ExtendedMadness.  More components and charts for mobile developers."&gt;ExtendedMadness. More components and charts for mobile developers.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;*I'm no zealot, but my experience with Flex on mobile has been a bit
troubling. Number one, it is an extremely large library and has a lot of
reported performance issues. I'm sure performance will get better as
time goes on, as Adobe is working hard to fix this. Number two, MXML
compiles down to AS3... so my thought is why waste time with MXML and
just use AS3 from the onset, especially when Adobe asks you to code
certain aspects (item renders) in AS3 anyway.&lt;/p&gt;</summary></entry><entry><title>UKDroidCon 2011</title><link href="http://michaelmartinez.in/ukdroidcon-2011.html" rel="alternate"></link><updated>2011-08-31T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-08-31:ukdroidcon-2011.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;Check this OUT!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This &lt;a href="http://uk.droidcon.com/"&gt;droidcon event&lt;/a&gt; looks AWESOME. Today is the last day to
register at the early bird pricing, you know quids and all that. If you
live in the UK, you owe it to yourself to get there and get your learn
on!&lt;/p&gt;
&lt;p&gt;Look at this amazing line up:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DAY ONE - BARCAMP/DEMOCAMP&lt;/p&gt;
&lt;p&gt;The first day will start at 9AM to meet up and vote for the Barcamp
presentations.&lt;/p&gt;
&lt;p&gt;By 10:30 ish the Barcamp will be in full swing with 10s of presentation
to choose from.&lt;/p&gt;
&lt;p&gt;Around 17:00 we'll get started for the Democamp.&lt;/p&gt;
&lt;p&gt;And by 19:00 we should all be gathering for Beer&amp;amp;Pizzacamp!&lt;/p&gt;
&lt;p&gt;DAY TWO - CONFERENCE&lt;/p&gt;
&lt;p&gt;The second day will start around 9AM and finish by 6PM. Then you can
join one of the many post-conference drinks!&lt;/p&gt;
&lt;p&gt;Wireframing Like A Pro&lt;/p&gt;
&lt;p&gt;Greg Taylor - Tigerspike&lt;/p&gt;
&lt;p&gt;Greg Taylor will talk about Wireframing like a pro.&lt;/p&gt;
&lt;p&gt;Concurrency And Multi-Core &amp;amp; Honeycomb&lt;/p&gt;
&lt;p&gt;Al Sutton - Funky Android&lt;/p&gt;
&lt;p&gt;Al will be talking about the mayhem of Multi-core. He'll teach you why
more cores can be good for an application and show you when, and how,
you can make use of any extra cores which might be available on the
device your application runs on.&lt;/p&gt;
&lt;p&gt;Android@Home, Bluetooth @ Android, Wireless M2M&lt;/p&gt;
&lt;p&gt;Harald Naumann&lt;/p&gt;
&lt;p&gt;Harald Naumann will talk about Android@Home, Bluetooth @ Android and
Wireless M2M.&lt;/p&gt;
&lt;p&gt;Gaming and Bluevia&lt;/p&gt;
&lt;p&gt;Yosi Taguri - Bluevia&lt;/p&gt;
&lt;p&gt;Yosi Taguri will talk about Gaming and Bluevia&lt;/p&gt;
&lt;p&gt;Mobile Enterprise Security And The Need For Mobile Device Management&lt;/p&gt;
&lt;p&gt;Alan Goode&lt;/p&gt;
&lt;p&gt;Alan will talk about the use of mobile phones in the enterprise and
share his experience of the Mobile Device Management market.
Organisations are being challenged by employees bringing in their own
mobile devices and expecting to access corporate networks and store
corporate information. Alan will discuss some of the security challenges
that this ‘Consumerisation’ trend is creating and how organisations are
meeting this challenge.&lt;/p&gt;
&lt;p&gt;Richard Hyndman - Google&lt;/p&gt;
&lt;p&gt;Richard Hyndmann will talk about Google Fragments&lt;/p&gt;
&lt;p&gt;Operator APIs&lt;/p&gt;
&lt;p&gt;James Parton - O2&lt;/p&gt;
&lt;p&gt;James Parton will talk about Operator API.&lt;/p&gt;
&lt;p&gt;Open Intents - Historify And Other Aggregating Apps&lt;/p&gt;
&lt;p&gt;Friedger Müffke&lt;/p&gt;
&lt;p&gt;Friedger Müffke will talk about Historify And Other Aggregating
Applications (Google Summer Of Code Project).&lt;/p&gt;
&lt;p&gt;Kick-starting Android Application Development&lt;/p&gt;
&lt;p&gt;Matthias Kaeppler - Qype&lt;/p&gt;
&lt;p&gt;Matthias will talk about kick-starting Android Application Development:
"Due to its basis in Java, the Android SDK is a simple way to get
started with app development, even for those developers not coming from
a mobile background. Still, the Android framework lacks standard,
re-usable solutions to many recurring tasks, making it more difficult
than necessary to get an application off the ground quickly. Thanks to
the amazing Android development community, we have plenty of utility
libraries today that patch these holes in the Android framework. In this
talk I will present a selection of these freely available libraries,
which will help kick-start app development, by managing your objects and
builds, and by offering ready-to-use solutions for the most common
issues."&lt;/p&gt;
&lt;p&gt;The Geeksphone Story&lt;/p&gt;
&lt;p&gt;Javier Agüera - Geeksphone&lt;/p&gt;
&lt;p&gt;Javier Agüera will talk about the Geeksphone story.&lt;/p&gt;
&lt;p&gt;Android Gaming&lt;/p&gt;
&lt;p&gt;Mustafa Isik - CodeSurgeon&lt;/p&gt;
&lt;p&gt;Mustafa Isik will talk about Android Gaming.&lt;/p&gt;
&lt;p&gt;3D Advertising&lt;/p&gt;
&lt;p&gt;Terence Eden - Inmobi&lt;/p&gt;
&lt;p&gt;Terence will talk about the Reality of Mobile Advertising.&lt;/p&gt;
&lt;p&gt;Test-Driving Android Applications with Roboelectric&lt;/p&gt;
&lt;p&gt;Joseph Moore - Pivotal Labs&lt;/p&gt;
&lt;p&gt;Joseph will talk about why and how Robolectric was built.&lt;/p&gt;
&lt;p&gt;Reforming Addicts Or iOS To Android Made Easy&lt;/p&gt;
&lt;p&gt;Kieran Gutteridge&lt;/p&gt;
&lt;p&gt;Kieran will talk about reforming addicts or iOS to Android made easy.&lt;/p&gt;
&lt;p&gt;UI For Tablet &amp;amp; Phone and TV&lt;/p&gt;
&lt;p&gt;Nick Butcher - Google&lt;/p&gt;
&lt;p&gt;Nick Butcher will talk about UI For Tablet &amp;amp; Phone and TV.&lt;/p&gt;
&lt;p&gt;Android's Message-Driven Architecture&lt;/p&gt;
&lt;p&gt;Carl Gustaf Harroch - Novoda&lt;/p&gt;
&lt;p&gt;At Droidcon London 2011, Carl-Gustaf Harroch will explain Android's
Message-driven Architecture.&lt;/p&gt;
&lt;p&gt;Steps to Best Beta Releases&lt;/p&gt;
&lt;p&gt;Jon Vlachoyiannis - Bugsense&lt;/p&gt;
&lt;p&gt;Jon Vlachoyiannis will talk about testing, specifically Steps to Best
Beta Releases.&lt;/p&gt;
&lt;p&gt;Motion Recognition with Android Devices&lt;/p&gt;
&lt;p&gt;Gabor Paller - Sfonge Ltd&lt;/p&gt;
&lt;p&gt;A built-in accelerometer is an almost obligatory feature of Android
devices. This sensor enables the auto-rotation feature and is used e.g.
in game applications for tilt-controlling the action. This presentation
discusses the usage of accelerometer for detecting dynamic motion
patterns. Shake or walk detection are very common use cases but exotic
features like dance detection can also improve the usability of a
specific application significantly. Android does not have platform-level
motion recognizer module therefore developers need to be aware, how to
detect motion patterns in the accelerometer's sample stream. We will
examine the most frequently used motion detection methods. The effect on
battery consumption will also be presented.&lt;/p&gt;
&lt;p&gt;Massively Scalable c2dm with QoS and SLAs&lt;/p&gt;
&lt;p&gt;Dylan Boyd - Urban Air Ship&lt;/p&gt;
&lt;p&gt;Dylan Boyd will talk about Push notifications, specifically massively
scalable c2dm with QoS and SLAs.&lt;/p&gt;
&lt;p&gt;Traceview and MAT for Fun and Profit&lt;/p&gt;
&lt;p&gt;Mark Murphy - CommonsWare&lt;/p&gt;
&lt;p&gt;Mark Murphy will talk about Traceview and MAT for Fun and Profit.&lt;/p&gt;
&lt;p&gt;How To Run A Private Beta On The Android Market&lt;/p&gt;
&lt;p&gt;Thai Tran - Lightbox&lt;/p&gt;
&lt;p&gt;Thai will talk about How To Run A Private Beta On The Android Market.&lt;/p&gt;
&lt;p&gt;Making Sense of In-App Billing&lt;/p&gt;
&lt;p&gt;Hermes Pique Robot Media&lt;/p&gt;
&lt;p&gt;Android In-App Billing is not for the faint of heart! Hermes Pique will
introduce the core concepts behind the Android Market's Billing Service,
and get you up and running with a working example using his open-source
Android Billing Library.&lt;/p&gt;</summary></entry><entry><title>Some design stuff I've been working on...</title><link href="http://michaelmartinez.in/some-design-stuff-ive-been-working-on.html" rel="alternate"></link><updated>2011-08-17T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-08-17:some-design-stuff-ive-been-working-on.html</id><summary type="html">&lt;p&gt;You gotta keep the skills in Photoshop up to date... otherwise they
whither.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/08/3d_map_MarkParis.png" title="3d_map_MarkParis" /&gt;][]&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/08/caffe1.png" title="caffe" /&gt;][]&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/08/3d_map_MarkParis.png" title="3d_map_MarkParis" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/08/3d_map_MarkParis.png
  [&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/08/caffe1.png" title="caffe" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/08/caffe1.png&lt;/p&gt;</summary></entry><entry><title>New(ish) Directions</title><link href="http://michaelmartinez.in/newish-directions.html" rel="alternate"></link><updated>2011-06-11T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-06-11:newish-directions.html</id><summary type="html">&lt;p&gt;"Native" development is fun and challenging, but (there is always a but)
I find myself wanting to embrace a wider audience. The rumors you hear
about making money with Android may or may not be true. I have two apps
out; one is paid and one is free.&lt;/p&gt;
&lt;p&gt;My apps are completely different and 100% un-related from each other.
That said, the free app has been downloaded almost an order of magnitude
more than the paid app. I'm not sure if that means a damn thing, but its
hard to miss. The quality of my apps and usefulness aside; its also
difficult to look at the other platforms and not have a, "What if my app
was in that store..." moment.&lt;/p&gt;
&lt;p&gt;So I'm currently investigating ways to get my apps cross-platform and
its been an extremely fun process. I've looked at;
Flash/Flex/Air/JavaScript/HTML/CSS/Phonegap/Titanium/... and so on. I
will be posting a nice big roundup here shortly. I'm still gathering
materials/evidence as I don't want to alienate or mislead other people
who are curious for the same info and another perspective.&lt;/p&gt;</summary></entry><entry><title>Abecedario Infantil</title><link href="http://michaelmartinez.in/abecedario-infantil.html" rel="alternate"></link><updated>2011-05-19T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-05-19:abecedario-infantil.html</id><summary type="html">&lt;p&gt;Abecedario Infantil is an application that will teach you or your child
the alphabet in Spanish in a fun and interactive way.&lt;/p&gt;
&lt;p&gt;The Letras y Sonidos(letters &amp;amp; sounds)button will show you the correct
pronunciation of the letter, it is audible when the letter card is
loaded. If you miss the sound, simply touch the card and it will play
again. This screen also includes a picture of an object or animal with
the corresponding name in Spanish. In a future version, the card will
also play those words.&lt;/p&gt;
&lt;p&gt;The Signos (Signs) button will teach the basic sign language alphabet.&lt;/p&gt;
&lt;p&gt;We are working on more interactive Spanish/English activities, so please
stay tuned.&lt;/p&gt;
&lt;p&gt;A bit of advice if I may: My three year old (ver 1.0) likes to touch the
card, what seems like a thousand times, before moving on the the next
letter. Adjust volume controls as necessary.&lt;/p&gt;
&lt;p&gt;My wife is from Colombia and speaks nothing but Spanish to our children.
A spectacular consequence is the ability of my children (1.0 only, as
2.0 is still too young to speak) to switch between English and Spanish
effortlessly. What we found amazing is that while 1.0 speaks Spanish, he
really didn't know the alphabet. This app has really changed that and
1.0 know knows his Spanish alphabet as well as the English alphabet.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://market.android.com/details?id=com.caffeine.alfabeto"&gt;Android Market Listing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ScreenShots:&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Main Screen&lt;/h2&gt;
&lt;/p&gt;

&lt;div&gt;
[![][]][]

&lt;/div&gt;

&lt;/p&gt;

&lt;h2&gt;Letras y Sonidos:&lt;/h2&gt;
&lt;/p&gt;

&lt;div&gt;
[![][1]][]

&lt;/div&gt;

&lt;/p&gt;

&lt;h2&gt;Signos:&lt;/h2&gt;
&lt;/p&gt;

&lt;div&gt;
[![][2]][]

&lt;/div&gt;

&lt;/p&gt;

&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/05/main.jpg" title="main" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/05/main.jpg
  [&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/05/letras.jpg" title="letras" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/05/letras.jpg
  [&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/05/signos.jpg" title="signos" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/05/signos.jpg&lt;/p&gt;</summary></entry><entry><title>Android Holographic UI Elements for Mockup</title><link href="http://michaelmartinez.in/android-holographic-ui-elements-for-mockup.html" rel="alternate"></link><updated>2011-05-18T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-05-18:android-holographic-ui-elements-for-mockup.html</id><summary type="html">&lt;p&gt;After searching high and low for a set of Android Holographic UI
elements for mockups and coming up empty.... I decided to create one. It
is very, very much a work in progress, but I thought I'd get it out
there and see what happens. Help spread the word!!!&lt;/p&gt;
&lt;p&gt;All of the elements are grouped in sub-layers for Fireworks. The
Photoshop file is also organized in layers. Both files are vectors and
fully editable. Let me know if you'd like to see something, changes,
etc.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.mediafire.com/?i1pipnll6yme3de"&gt;Download the file&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Tablet UI/UX Design Considerations</title><link href="http://michaelmartinez.in/tablet-uiux-design-considerations.html" rel="alternate"></link><updated>2011-05-13T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-05-13:tablet-uiux-design-considerations.html</id><summary type="html">&lt;p&gt;User Interface / User Experience design is obviously a major aspect of
app design/development and one worthy, in my opinion, of considerable
pontification. I've watched several videos regarding UI / NUI design
and skimmed a few books. This aspect of development is really
interesting to me and I plan on writing about it a lot more.&lt;/p&gt;
&lt;p&gt;I really like the video here (click the picture above to play embedded
version). Bill Van Hecke is the lead UI/UX designer for the Omni group
and narrates the entire video. As I madly (digitally) scribbled notes (I
love Evernote)... I thought I'd share.  Full disclosure: Yes, the video
is for iPad... Android is obviously my platform of choice, but I
recognize a good design when I see it. We can learn a lot from the iOS
ecosystem.&lt;/p&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;p&gt;​1. Brutally Massacre Features - is the app still useful to the average
user without this feature? If not, kill it dead.. at least initially.
Simplify your UI as it helps make it more intuitive. It also helps to
keep the project manageable from a development point of view. As with
most things in life; the KISS principle applies.&lt;/p&gt;
&lt;p&gt;​2. The Android tablet is not a giant phone - I'm super guilty of this
as of this writing and I intend on rectifying this post-haste. Don't
simply reuse your main layouts for the large and extra-large resource
layout files. Not only is it super lazy design, its a total waste of
space. Furthermore, you are missing an opportunity to enhance your UX,
thus making your brand and app more desirable.&lt;/p&gt;
&lt;p&gt;​3. Adding design "space filler" isn't good practice - Now that you have
more space, adding elements and widgets to fill whitespace isn't good
design. You don't want a NASA Space shuttle cockpit. You need to think
about; control occlusion, accuracy, distractions and context. Hide
buttons/menus behind logically groups menu and button items. Only
display relevant controls for the context of the object in focus.&lt;/p&gt;
&lt;p&gt;​4. Progressive disclosure - Universal Principles of Design. If you need
three columns stuffed with controls; you are probably making your user
think way too much, increasing the chance of distraction and not using
the power of contextual menus/buttons. Taps are cheap from a cognitive
load perspective, so make more objects "tap-able" and provide useful
contextual actions based on those taps. The rarer something is, the more
acceptable it is to bury the item deeper in lists.&lt;/p&gt;
&lt;p&gt;​5. Taps are especially cheap in the Steering wheel zone - The 90 or so
pixels going down the side of the app are super easy for users to reach
and tap while holding the tablet with two hands. Try to implement the
most actionable / relevant UI elements in this zone. The "middle" of the
app is a great place to display the users content. Be cognizant of
control occlusion.&lt;/p&gt;
&lt;p&gt;​6. Think about your user eating a sandwich while using your app - I
think this is pretty self explanatory. Gestures are really neat and fun
when used in the right context. However, if your user constantly has to
maneuver the tablet or reposition themselves to use the app, you are
making them think too much.&lt;/p&gt;
&lt;p&gt;​7. Tap, drag/swipe, touch &amp;amp; hold, double tap, pinch / un-pinch, rotate
- These are iOS's gestures. Like it or not my fellow Android-ians... the
Apple Marketing machine has cleverly trained future tablet users while
marketing their wares. They show these "basic" gestures in commercials
and elsewhere and research has shown these to be easily performed with
one hand. Other gestures can be included for "power-users" but don't
make them required.&lt;/p&gt;
&lt;p&gt;​8. You have approximately 250ms to show users that a command was
understood before they become confused, angry, anxious or other
emotional state that is undesirable. When a user interacts with the app,
it should respond with "something" be that a glowing, changing of state,
movement, etc. Let your users know that the action they just performed
is valid, even if it wasn't.&lt;/p&gt;
&lt;p&gt;​9. Forgiveness - Enable and empower users to explore and exercise
control over the app. Help them feel adventurous. Don't make them afraid
to explore for fear of breaking or ruin something. Playful | fearless, a
big part of the reason why children are better with new technology than
adults. They are AWESOME at failing.&lt;/p&gt;
&lt;p&gt;​10. Modality - Lots of basic gestures mean the exact same thing. For
example, the drag can be panning, moving an object, selecting multiple
objects and the list goes on. Setting explicit modes of operations
separates concerns and helps to clearly define how the gesture will
behave in mode. Usability testing becomes very important here. this can
be complicated for the developer and SHOULD make it easier for the user.&lt;/p&gt;
&lt;p&gt;​11. Organize the app by meaning, not based on opinion - Your work-flow
may radically differ from your users work-flow. Embrace this, as I
really think this makes designing and implementing the app better for
the user and easier for the developer. DO think about how users will use
the app. DON'T try to predict and code to those assumptions.&lt;/p&gt;</summary></entry><entry><title>Google I/O 2011 - Initial Thoughts</title><link href="http://michaelmartinez.in/google-io-2011-initial-thoughts.html" rel="alternate"></link><updated>2011-05-12T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-05-12:google-io-2011-initial-thoughts.html</id><summary type="html">&lt;p&gt;This was my first year attending Google I/O and I hope to attend many
more. Overall, the experience was simply mind bending. Every session I
attended was packed [from an information &amp;amp; body count perspective] and
meticulously presented.  I received a Google I/O review form and laid
down some initial thoughts... I'll probably add another review in a week
or so after full digestion.&lt;/p&gt;
&lt;p&gt;Session Review:&lt;/p&gt;
&lt;p&gt;First, I'd like to thank Google for the extremely professional,
high-quality and INSPIRING developer conference. I appreciate the
opportunity to participate.&lt;/p&gt;
&lt;p&gt;I'd like to see some of the sessions last a bit longer in the future.
I'm sure scheduling is not trivial, nor is it possible to please
everyone. That said, I attended several sessions that were extremely
compressed, but most were just right.&lt;/p&gt;
&lt;p&gt;A good example of just right; The Android Protips session with Reto was
awesome and easily digestible for the intended audience (experienced
developers). The Protips session presented information that was new to a
lot of developers, yet manageable from a cognitive point of view.&lt;/p&gt;
&lt;p&gt;In other words, it was just right in my humble opinion. Which is not to
say that I wouldn't appreciate a longer session with Reto. Code and
advanced developer topics are easier to consume for people who spend a
lot of time coding.&lt;/p&gt;
&lt;p&gt;A good example of a compressed session; The Designing and Implementing
of UI's for phones and tablets. Developers naturally spend most of their
time coding, I think we can all agree on that. UI / UX design are topics
where most developers will readily admit some level deficiency, myself
included.&lt;/p&gt;
&lt;p&gt;So if we know developers have ranging issues with UI / UX. I would think
it makes sense to spend a bit more time on the topic. Furthermore, a
fair amount of criticism for apps related to Android is a lack of
polish, fit and feel. "Haters gonna hate", but there is a kernel of
truth in those arguments. It may be selfish to ask for this, but I would
really like to see more UI / UX topics.&lt;/p&gt;
&lt;p&gt;I guess it boils down to how many developers "do it all" for their apps
where the economics of hiring a designer is not possible or they simply
don't know their UI's / UX's need help. In any case, I don't think
spending more time on UI's / UX's would be time poorly spent or poorly
received by the Android / Chrome developer community as a whole.&lt;/p&gt;</summary></entry><entry><title>Terms and Conditions</title><link href="http://michaelmartinez.in/terms-and-conditions.html" rel="alternate"></link><updated>2011-05-02T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-05-02:terms-and-conditions.html</id><summary type="html">&lt;p&gt;Terms and Conditions&lt;/p&gt;
&lt;div style="text-align: justify; font-family: Lucida sans;"&gt;
&lt;/p&gt;

Conditions of Use
=================

&lt;/p&gt;
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES and its associates provide their
services to you subject to the following conditions. If you visit or
shop within this website, you accept these conditions. Please read them
carefully.

PRIVACY
-------

&lt;/p&gt;
Please review our Privacy Notice, which also governs your visit to our
website, to understand our practices.

ELECTRONIC COMMUNICATIONS
-------------------------

&lt;/p&gt;
When you visit MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES or send e-mails
to us, you are communicating with us electronically. You consent to
receive communications from us electronically. We will communicate with
you by e-mail or by posting notices on this site. You agree that all
agreements, notices, disclosures and other communications that we
provide to you electronically satisfy any legal requirement that such
communications be in writing.

COPYRIGHT
---------

&lt;/p&gt;
All content included on this site, such as text, graphics, logos, button
icons, images, audio clips, digital downloads, data compilations, and
software, is the property of MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES or
its content suppliers and protected by international copyright laws. The
compilation of all content on this site is the exclusive property of
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES, with copyright authorship for
this collection by MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES, and
protected by international copyright laws.

TRADE MARKS
-----------

&lt;/p&gt;
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES trademarks and trade dress may
not be used in connection with any product or service that is not
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIESs, in any manner that is likely
to cause confusion among customers, or in any manner that disparages or
discredits MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES. All other trademarks
not owned by MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES or its subsidiaries
that appear on this site are the property of their respective owners,
who may or may not be affiliated with, connected to, or sponsored by
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES or its subsidiaries.

LICENSE AND SITE ACCESS
-----------------------

&lt;/p&gt;
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES grants you a limited license to
access and make personal use of this site and not to download (other
than page caching) or modify it, or any portion of it, except with
express written consent of MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES. This
license does not include any resale or commercial use of this site or
its contents: any collection and use of any product listings,
descriptions, or prices: any derivative use of this site or its
contents: any downloading or copying of account information for the
benefit of another merchant: or any use of data mining, robots, or
similar data gathering and extraction tools. This site or any portion of
this site may not be reproduced, duplicated, copied, sold, resold,
visited, or otherwise exploited for any commercial purpose without
express written consent of MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES. You
may not frame or utilize framing techniques to enclose any trademark,
logo, or other proprietary information (including images, text, page
layout, or form) of MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES and our
associates without express written consent. You may not use any meta
tags or any other "hidden text" utilizing MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIESs name or trademarks without the express written consent of
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES. Any unauthorized use terminates
the permission or license granted by MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIES. You are granted a limited, revocable, and nonexclusive right
to create a hyperlink to the home page of MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIES so long as the link does not portray MICHAEL MARTINEZ OF
CAFFEINE INDUSTRIES, its associates, or their products or services in a
false, misleading, derogatory, or otherwise offensive matter. You may
not use any MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES logo or other
proprietary graphic or trademark as part of the link without express
written permission.

YOUR MEMBERSHIP ACCOUNT
-----------------------

&lt;/p&gt;
If you use this site, you are responsible for maintaining the
confidentiality of your account and password and for restricting access
to your computer, and you agree to accept responsibility for all
activities that occur under your account or password. If you are under
18, you may use our website only with involvement of a parent or
guardian. MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES and its associates
reserve the right to refuse service, terminate accounts, remove or edit
content, or cancel orders in their sole discretion.

REVIEWS, COMMENTS, EMAILS, AND OTHER CONTENT
--------------------------------------------

&lt;/p&gt;
Visitors may post reviews, comments, and other content: and submit
suggestions, ideas, comments, questions, or other information, so long
as the content is not illegal, obscene, threatening, defamatory,
invasive of privacy, infringing of intellectual property rights, or
otherwise injurious to third parties or objectionable and does not
consist of or contain software viruses, political campaigning,
commercial solicitation, chain letters, mass mailings, or any form of
"spam." You may not use a false e-mail address, impersonate any person
or entity, or otherwise mislead as to the origin of a card or other
content. MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES reserves the right (but
not the obligation) to remove or edit such content, but does not
regularly review posted content.

If you do post content or submit material, and unless we indicate
otherwise, you grant MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES and its
associates a nonexclusive, royalty-free, perpetual, irrevocable, and
fully sublicensable right to use, reproduce, modify, adapt, publish,
translate, create derivative works from, distribute, and display such
content throughout the world in any media. You grant MICHAEL MARTINEZ OF
CAFFEINE INDUSTRIES and its associates and sublicensees the right to use
the name that you submit in connection with such content, if they
choose. You represent and warrant that you own or otherwise control all
of the rights to the content that you post: that the content is
accurate: that use of the content you supply does not violate this
policy and will not cause injury to any person or entity: and that you
will indemnify MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES or its associates
for all claims resulting from content you supply. MICHAEL MARTINEZ OF
CAFFEINE INDUSTRIES has the right but not the obligation to monitor and
edit or remove any activity or content. MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIES takes no responsibility and assumes no liability for any
content posted by you or any third party.

RISK OF LOSS
------------

&lt;/p&gt;
All items purchased from MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES are
made pursuant to a shipment contract. This basically means that the risk
of loss and title for such items pass to you upon our delivery to the
carrier.

PRODUCT DESCRIPTIONS
--------------------

&lt;/p&gt;
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES and its associates attempt to be
as accurate as possible. However, MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIES does not warrant that product descriptions or other content
of this site is accurate, complete, reliable, current, or error-free. If
a product offered by MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES itself is
not as described, your sole remedy is to return it in unused condition.

DISCLAIMER OF WARRANTIES AND LIMITATION OF LIABILITY

THIS SITE AND/OR SOFTWARE APPLICATIONS ARE PROVIDED BY MICHAEL MARTINEZ
OF CAFFEINE INDUSTRIES ON AN "AS IS" AND "AS AVAILABLE" BASIS. MICHAEL
MARTINEZ OF CAFFEINE INDUSTRIES MAKES NO REPRESENTATIONS OR WARRANTIES
OF ANY KIND, EXPRESS OR IMPLIED, AS TO THE OPERATION OF THIS SITE OR THE
INFORMATION, CONTENT, MATERIALS, OR PRODUCTS INCLUDED ON THIS SITE. YOU
EXPRESSLY AGREE THAT YOUR USE OF THIS SITE IS AT YOUR SOLE RISK.

TO THE FULL EXTENT PERMISSIBLE BY APPLICABLE LAW, MICHAEL MARTINEZ OF
CAFFEINE INDUSTRIES DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED,
INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE. MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIES DOES NOT WARRANT THAT THIS SITE, ITS SERVERS, OR E-MAIL SENT
FROM MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES ARE FREE OF VIRUSES OR
OTHER HARMFUL COMPONENTS. MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES WILL
NOT BE LIABLE FOR ANY DAMAGES OF ANY KIND ARISING FROM THE USE OF THIS
SITE, INCLUDING, BUT NOT LIMITED TO DIRECT, INDIRECT, INCIDENTAL,
PUNITIVE, AND CONSEQUENTIAL DAMAGES.

CERTAIN STATE LAWS DO NOT ALLOW LIMITATIONS ON IMPLIED WARRANTIES OR THE
EXCLUSION OR LIMITATION OF CERTAIN DAMAGES. IF THESE LAWS APPLY TO YOU,
SOME OR ALL OF THE ABOVE DISCLAIMERS, EXCLUSIONS, OR LIMITATIONS MAY NOT
APPLY TO YOU, AND YOU MIGHT HAVE ADDITIONAL RIGHTS.

APPLICABLE LAW
--------------

&lt;/p&gt;
By visiting MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES, you agree that the
laws of the state of Arizona, USA, without regard to principles of
conflict of laws, will govern these Conditions of Use and any dispute of
any sort that might arise between you and MICHAEL MARTINEZ OF CAFFEINE
INDUSTRIES or its associates.

DISPUTES
--------

&lt;/p&gt;
Any dispute relating in any way to your visit to MICHAEL MARTINEZ OF
CAFFEINE INDUSTRIES or to products you purchase through MICHAEL MARTINEZ
OF CAFFEINE INDUSTRIES shall be submitted to confidential arbitration in
Arizona, USA, except that, to the extent you have in any manner violated
or threatened to violate MICHAEL MARTINEZ OF CAFFEINE INDUSTRIESs
intellectual property rights, MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES
may seek injunctive or other appropriate relief in any state or federal
court in the state of Arizona, USA, and you consent to exclusive
jurisdiction and venue in such courts. Arbitration under this agreement
shall be conducted under the rules then prevailing of the American
Arbitration Association. The arbitrators award shall be binding and may
be entered as a judgment in any court of competent jurisdiction. To the
fullest extent permitted by applicable law, no arbitration under this
Agreement shall be joined to an arbitration involving any other party
subject to this Agreement, whether through class arbitration proceedings
or otherwise.

SITE POLICIES, MODIFICATION, AND SEVERABILITY
---------------------------------------------

&lt;/p&gt;
Please review our other policies, such as our Shipping and Returns
policy, posted on this site. These policies also govern your visit to
MICHAEL MARTINEZ OF CAFFEINE INDUSTRIES. We reserve the right to make
changes to our site, policies, and these Conditions of Use at any time.
If any of these conditions shall be deemed invalid, void, or for any
reason unenforceable, that condition shall be deemed severable and shall
not affect the validity and enforceability of any remaining condition.

QUESTIONS:
----------

&lt;/p&gt;
Questions regarding our Conditions of Usage, Privacy Policy, or other
policy related material can be directed to our support staff by clicking
on the "Contact Us" link in the side menu.

&lt;p&gt;
&lt;/div&gt;

&lt;/p&gt;</summary></entry><entry><title>Engineer Toolkit</title><link href="http://michaelmartinez.in/engineer-toolkit.html" rel="alternate"></link><updated>2011-04-30T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-04-30:engineer-toolkit.html</id><summary type="html">&lt;h1&gt;Engineer Toolkit&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;
My math teacher always told me to learn how to calculate formulas and
such manually because I may not have a calculator to rely on. She was
right and no one should rely 100% on a tool other than one's mind
coupled with training and practice. That said, My math teach and I were
not aware of the computing power that is riding around in most of our
pockets 24/7 these days.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Engineer Toolki&lt;/strong&gt;t is the first comprehensive Android tool for
Engineers / Drivers / Pump operators. It will also prove helpful for
fill-ins or anyone else that may need to calculate on the fireground.
Quick , accurate and intuitive design and implementation objectives were
strictly adhered to during design and construction.&lt;/p&gt;
&lt;p&gt;Quick data entry is paramount when determining what to pump on scene.
Input on mobile devices can be tedious and sometimes difficult when
forwarding the latest joke to your crew. Now imagine typing all the hose
lengths, various flows and nozzle pressures when your at the "big one"!
You can't delay and recalling rote memorized hydraulic formulas can be
difficult at 3am . This app requires ZERO manual input of values to get
pump discharge pressure (PDP) and friction loss (FL) of complex hose
lays and scenarios .&lt;/p&gt;
&lt;p&gt;Most of the app is structured in a step-by-step fashion leading to the
eventual calculated data, I.e. PDP, FL, etc.  It was designed to be
intuitive and easy to use. If you find areas that can be improved or
fixed, please don't hesitate to email, call, send smoke signals or call
911 (Stranger things have happened, eh?). In all seriousness, I'm
serious about helping Engineers perform on the fireground... I'm
thinking up some kind of reward program for helpful suggestions and
comments.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://market.android.com/details?id=com.caffeine.hydraulics"&gt;Android Market Listing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Features: Version 1.0 (May 2011 Release)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single line friction loss calculator&lt;/li&gt;
&lt;li&gt;Wyed hose lay PDP / FL calculator&lt;/li&gt;
&lt;li&gt;Siamese hose lay PDP / FL calculator&lt;/li&gt;
&lt;li&gt;Masterstream calculator&lt;/li&gt;
&lt;li&gt;Elevated Masterstream calculator&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
Roadmap (features still to come)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Engineer documentation which will include copious amounts of
    information covering a wide variety of topics&lt;/li&gt;
&lt;li&gt;Conversion of all calculation to metric&lt;/li&gt;
&lt;li&gt;Many, many more that will be revealed soon...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
Screenshots: Main Screen&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/04/main1.png" title="flScreen" /&gt;][]&lt;/p&gt;
&lt;p&gt;Screenshots: Basic Friction Loss Calculator&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/04/flScreen.png" title="flScreen" /&gt;][]&lt;/p&gt;
&lt;p&gt;[&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/04/main1.png" title="flScreen" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/04/main1.png
  [&lt;img alt="" src="http://caffeineindustries.com/wp-content/uploads/2011/04/flScreen.png" title="flScreen" /&gt;]: http://caffeineindustries.com/wp-content/uploads/2011/04/flScreen.png&lt;/p&gt;</summary></entry><entry><title>*Development</title><link href="http://michaelmartinez.in/development.html" rel="alternate"></link><updated>2011-02-13T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-02-13:development.html</id><summary type="html">&lt;p&gt;So far I've really enjoyed my time learning Java and Android
development.  It's taught me a great deal in regards to programming the
entire life-cycle of an application. In class, we are generally given a
small task to complete which can generally be accomplished in 1 to 3
hours with 5 or 6 class files.&lt;/p&gt;
&lt;p&gt;Developing a "REAL" Android app has been an extreme learning
curve comparatively speaking. Every aspect must be accounted for and
properly dealt with. However, I would bet that it takes me three times
longer than a seasoned developer to accomplish most tasks. I'm changing
that slowly but surely... its a passion thing.&lt;/p&gt;
&lt;p&gt;How does one become more efficient with their programming? Study
relevant bits and minimize distractions. I attempt to steer clear of
religious and political debates unless I'm cornered in my personal life.
I'm finding that doing the same in programming pays off.&lt;/p&gt;
&lt;p&gt;You can search and seek out, x vs. y debates and disccusions on the
intertubes until you're blue in the face. I've found that rarely, if
ever, do you gain real insight from such discussions. I've found that
its better to just do what you do until it doesn't work, then seek new
and better approaches specific to your problem. Drilling down the
issue/problem to its finest details yields the best ROI for time in my
experience thus far.&lt;/p&gt;
&lt;p&gt;I know that sounds intuitive and easy. When you're staring the giant
programming world in the face with problems you barely comprehend
its daunting and easy to be led astray. I've been clobbered by the time
sucking ritual of IDE vs IDE debate when all I was looking for was a way
to integrate a version control system. Countless hours; gone. No more, I
say... I'm getting hyper-focused and staying there.&lt;/p&gt;
&lt;p&gt;P.S. The picture is a preview of the next app...&lt;/p&gt;</summary></entry><entry><title>Engineer Toolkit is publishing very soon!</title><link href="http://michaelmartinez.in/engineer-toolkit-is-publishing-very-soon.html" rel="alternate"></link><updated>2011-01-03T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2011-01-03:engineer-toolkit-is-publishing-very-soon.html</id><summary type="html">&lt;p&gt;95% of the Engineer Toolkit app is done. Stay tuned for more updates and
a dedicated page with lots-of-info!!!&lt;/p&gt;</summary></entry><entry><title>Android and the UI</title><link href="http://michaelmartinez.in/android-and-the-ui.html" rel="alternate"></link><updated>2010-11-03T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-11-03:android-and-the-ui.html</id><summary type="html">&lt;p&gt;I just watched the &lt;a href="http://www.youtube.com/watch?v=M1ZBjlCRfz0" title="Google I/O Android UI Design"&gt;Google I/O 2010 Android UI Design Patterns video&lt;/a&gt;
a bit to be sure, but it was very informative and I suggest watching it
when you have the time (1 hour) if you haven't seen it. The video
explained some concepts that I have had trouble grasping for which I'm
very thankful. Hopefully, I'll find more along these lines.&lt;/p&gt;
&lt;p&gt;A few of the tutorials I've followed in making apps request the user to
delete the HDPI, MDPI and LDPI folders and simply rename one folder
to Drawable. The talk explains why those folders are not only included
in the initial app structure, but why they are increasingly critical for
cross device penetration. For example, lets say you have app icons that
look great on a medium density pixel per inch screen. If you simply use
the Drawable folder with said icons, when your app encounters a LDPI or
HDPI screen the icons will scale horribly if you haven't accounted for
it in the code.&lt;/p&gt;
&lt;p&gt;The talk also spoke to 5 main design paradigms for great Android
applications, which are; Dashboard, Action bar, Search bar, Quick
Actions and Companion widget. I'm not going to get into each one as the
Googlers do a &lt;em&gt;WAY&lt;/em&gt; better job (with visuals aids) explaining them.  I
found them to a great place to start and perhaps some self introspection
to my own shortcomings when designing just about everything. I think I
should pay way more attention to usability and user expectations.&lt;/p&gt;
&lt;p&gt;The QA was really enlightening for me and here is why. I've been
struggling like heck with the Quasi-WYSIWYG &amp;amp; XML based UI editor  in
the Eclipse IDE. I thought I was deficient in my XML coding ability and
I am, BUT I not as bad as I thought. I mean, I had problems making the
simplest things look right in the editor and subsequently the emulator.
Thank goodness I have a real Android device otherwise I would have made
a completely unusable app. Back to the point, A question asked if the
Google Android team was working on a UI editor that either replaced or
updated the "ATROCIOUS" Eclipse implementation. All of the Google
employees on the stage simply looked down and smiled when the question
came in. I think its safe to say that anyone (Including Googlers) who
have worked with the tool thinks of it as a brain-stealing-puppy-killer.&lt;/p&gt;
&lt;p&gt;The product manager said they are working on a product to resolve this
very issue but he was not in a position to disclose the details
publicly. Needless to say, I'm eagerly anticipating its release. I hope
they take some strong cues from Microsofts Expression Blend and/or
Design. A tool that would automagically convert PSD/AI files to Android
specific XML files would be so absolutely kick arse. I can't really
think of any adjectives to describe how happy I'd be.&lt;/p&gt;
&lt;p&gt;An Aside about tutorials/learning:&lt;/p&gt;
&lt;p&gt;Learning from a book is easy when the book has a lot of pictures and
samples/examples. Its not as easy to learn when the book is simply text
and the concept is abstract and non-linear. Perhaps the best method of
learning is the video, at least for me. You can skip ahead in a video,
but its annoying once you realize that you missed something important
and have to rewind. So I generally let it play from start to end. When
I'm nose deep in a book, I have the tendency to jump around and look at
the pictures and read ahead, then back and then I'm lost. This is before
I really understand what I'm looking at which is a of a waste of time
because I have to read it over.&lt;/p&gt;
&lt;p&gt;*Also, don't always blindly accept tutorials as the correct way to do
something simply because it worked. I have learned an important lesson
tonight in regards to this point in the example above.&lt;/p&gt;</summary></entry><entry><title>Microsoft moving from Silverlight!</title><link href="http://michaelmartinez.in/microsoft-moving-from-silverlight.html" rel="alternate"></link><updated>2010-10-29T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-10-29:microsoft-moving-from-silverlight.html</id><summary type="html">&lt;p&gt;This.&lt;/p&gt;
&lt;p&gt;Frustration is likely the main word from the poor souls who've put in
serious amounts of time to become proficient with Expression Studio
(Blend) and the intricacies of Microsoft's Silverlight. &lt;a href="http://www.zdnet.com/blog/microsoft/microsoft-our-strategy-with-silverlight-has-shifted/7834"&gt;Mary Jo
Foley&lt;/a&gt; has a post up today where she interviews Bob Muglia, the
Microsoft President in charge of the company’s server and tools
business. He basically says the company is moving away from Silverlight
in the web space and the desktop space, but “&lt;a href="http://www.zdnet.com/blog/microsoft/microsofts-new-pitch-every-net-developer-just-became-a-windows-phone-developer/5316"&gt;Silverlight is our
development platform for Windows Phone&lt;/a&gt;.”&lt;/p&gt;
&lt;p&gt;I took an introductory class in VB.NET last semester and was
very intrigued by Silverlight, XAML and the way &lt;em&gt;it seemed&lt;/em&gt; that
Microsoft was aggressively pushing Expression Studio and Silverlight
versions. I say "seemed" because its now obvious that Microsoft is
losing its interest in Silverlight as a serious contender to Adobe's
Flash and HTML 5. I'm a bit befuddled by this bit of news as the W3
consortium &lt;a href="http://www.infoworld.com/d/developer-world/w3c-hold-html5-in-websites-041?page=0,1"&gt;doesn't think&lt;/a&gt; HTML5 is ready for prime-time and Flash has
taken several bad PR shots to the chin as of late.&lt;/p&gt;
&lt;p&gt;Is Microsoft giving up too soon? I have no idea, maybe? I will tell you
that I was seriously interested in &lt;a href="http://caffeineindustries.com/?p=74"&gt;really&lt;/a&gt; learning C# and
Silverlight development, but a series of related news items have forced
me to rethink this position. Javascript, Python, Java and Ruby are
really starting to look worthy of a &lt;em&gt;serious investmen&lt;/em&gt;t in time. If I
had 5,000 hours invested in Silverlight development, I'd be half-passed
extremely angry with Microsoft right now... especially given the
Silverlight hype machine they've created in the last few years. I
seriously feel bad for these developers as all of a sudden, the focus
changes and the path moves. The developer is left in a lurch...
press-on, adapt and overcome OR start over.&lt;/p&gt;
&lt;p&gt;To me its that simple, but I'm not a sophisticated developer with years
of experience. Maybe the Silverlight dev. can carve out a niche and make
some money, but for how long? Furthermore, what if the Win7 phone
is received like the &lt;a href="http://www.engadget.com/2010/06/30/microsoft-kin-is-dead/"&gt;Microsoft Kin&lt;/a&gt;. I'm not in a position to say
whether Win7 phone will be successful or not (I hope it is as Android
and iOS need more competition). That all said, a
simple exercise in objective pragmatism must lead one to seriously
consider all of the possible situations which can be conceptualized.
Will Microsoft totally abandon Silverlight &lt;em&gt;sometime&lt;/em&gt; in the future?
After three years and &lt;a href="http://www.riastats.com,"&gt;relatively low adoption rates&lt;/a&gt;, is it better to
cut one's losses and press-on to another technology?&lt;/p&gt;
&lt;p&gt;According to RIA Stats, Silverlight plugin penetration is a bit better
than half on the big four browsers. Ok, what about sites that employ
Silverlight to deliver content? I couldn't find an authoritive place to
research such data, so lets get all hot and subjective. Its basic and
within the Microsoft sphere, Silverlight is used on a few applications
that are truly impressive. Day-to-day video and music media delivery is
still firmly in Flash's backyard. Line of business applications from the
cloud are a potential bright spot for Silverlight.&lt;/p&gt;
&lt;p&gt;I wonder how many companies will hesitate to make a long-term
Silverlight commitment because of the news today? Windows Azure supports
popular standards, protocols and languages including SOAP, REST, XML,
Java, PHP and Ruby. Why fiddle with Silverlight when Microsoft's own
cloud supports such a diverse range of languages? How long has Microsoft
known they were not in the "game" with Silverlight? Could they have
released this information a year ago?&lt;/p&gt;
&lt;p&gt;Lots of questions need to be answered.&lt;/p&gt;</summary></entry><entry><title>Android Development</title><link href="http://michaelmartinez.in/android-development.html" rel="alternate"></link><updated>2010-10-25T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-10-25:android-development.html</id><summary type="html">&lt;p&gt;I just completed started my first Android app. It works... and its damn
cool to see something you built on &lt;em&gt;your&lt;/em&gt; phone. That said, there is
still a &lt;em&gt;TON&lt;/em&gt; of work to do. I hope that I'm not served with a &lt;a href="http://www.marketwatch.com/story/oracle-sues-google-for-patent-infringement-2010-08-12?dist=beforebell"&gt;cease
and desist&lt;/a&gt; order, as Oracle is suing Google for patent infringements
relating to Android development. Although, I once read if you're not
getting in trouble you're not trying hard enough... perhaps?&lt;/p&gt;
&lt;p&gt;Back to the app, its a fire department related app and the only
competition retails his app at \$2.99. I've been thinking all along that
I will release free apps as long as I have a decent job and my family is
not wanting for anything. I believe in karma and as such,
I definitely don't want to be greedy (especially as so many people are
struggling to make ends meet in the current economic environment).  Not
to say this app cures cancer or something, but I imagine the other
developer may not like a free app similar to his... I don't know
anything about developer decorum in such circumstances.&lt;/p&gt;
&lt;p&gt;I'll have more very soon... STAY TUNED!&lt;/p&gt;</summary></entry><entry><title>Part II: Choosing a programming language</title><link href="http://michaelmartinez.in/part-ii-choosing-a-programming-language.html" rel="alternate"></link><updated>2010-10-09T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-10-09:part-ii-choosing-a-programming-language.html</id><summary type="html">&lt;p&gt;I spent a considerable amount of time pondering which programming
language I should really focus on.  I still have lingering questions and
half-formed opinions at this time, perhaps getting them out here will
help solidify the weaker aspects. This is not only an economical
question, but also a philosophical question, as mentioned in the
previous post.&lt;/p&gt;
&lt;p&gt;The economics were that of the opportunity cost when learning one
language over another. Learning in tandem is certainly an option,
although part of me wonders if you really &lt;em&gt;learn&lt;/em&gt; that way. Another
potential solution to this quandary is solve your current programming
problem with the language you want to really learn.&lt;/p&gt;
&lt;p&gt;The problem would have to be big enough to really test you. The features
that you decide to implement in your solution need to capture the bulk
of or at least a large portion of the framework behind the language.
Otherwise you become the dreaded jack of the language with no mastery
what-so-ever.&lt;/p&gt;
&lt;p&gt;I read an interesting take on the issue of choosing programming
languages. I read the article 4 tests, 8 programs, several sleepless
nights at the firehouse and 3 projects ago and I couldn't find it
(&lt;em&gt;Google Instant&lt;/em&gt; is awesome, but it has changed the way we get search
for ever). I'll sum up the salient points that I recall wishing I could
deliver proper attribution...&lt;/p&gt;
&lt;p&gt;The author stated that programmers MUST know and have sufficient
performance with multiple languages. His examples seemed valid and I
respected the point of view. He then went on to describe his ideal of
what languages one should learn. This also was respectable and made
sense form a beginners point of view.&lt;/p&gt;
&lt;p&gt;The author stated that one should focus on a language from distinct
groups. One high-level strongly typed language, one functional based
language and one script based language. What the heck does that mean?
We'll get into that in the next post...&lt;/p&gt;</summary></entry><entry><title>Brain-Computer Interface</title><link href="http://michaelmartinez.in/brain-computer-interface.html" rel="alternate"></link><updated>2010-09-23T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-09-23:brain-computer-interface.html</id><summary type="html">&lt;p&gt;WOW.&lt;/p&gt;
&lt;p&gt;Talk about a fun diversion. I was minding my own business reading
through my emails and I came across this &lt;a href="http://daeken.com/the-hardware-hacker-manifesto"&gt;hardware hacker manifesto&lt;/a&gt;.
I've been taking things apart and &lt;em&gt;trying&lt;/em&gt; to put them back together,
sometimes in different configurations, for a looooonnnnggg time. Most
people label this as a curious diversion or nerdy escapade if you
explain it in context. I've never really thought to label it
as&lt;em&gt;Hacking&lt;/em&gt;... until I became a subscriber to &lt;a href="http://makezine.com/"&gt;Make:&lt;/a&gt;. I don't really
have an opinion as to the manifesto above, as its none of my business
really... However, I became instantly and extremely interested in what
this guy was hacking.&lt;/p&gt;
&lt;p&gt;The item is called the&lt;a href="http://www.emotiv.com/index.php"&gt;Emotiv EPOC headset&lt;/a&gt; and it looks AWESOME. Why?
Its a research
grade &lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Electroencephalography"&gt;Electroencephalography&lt;/a&gt;&lt;/strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Electroencephalography"&gt;(&lt;/a&gt;&lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Electroencephalography"&gt;EEG&lt;/a&gt;&lt;/strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Electroencephalography"&gt;)&lt;/a&gt;
device at a consumer price point that ships with a relatively low cost
software development kit and a suite of tools that are plug and play. 
This is the FUTURE as far as I'm concerned. Again, you may ask, why?
Not only does it represent the ultimate in laziness (Humans do love to
be lazy... just ask them), it represents the possibility of truly
understanding the human condition.&lt;/p&gt;
&lt;p&gt;The brain. Our brain is an amazing feat of biological engineering. As I
sit here and struggle for words to tap into the keyboard so they can be
suitable for displaying and conveying my thoughts and emotion... I
wonder if this is how humans are to really designed to communicate. Does
the written word represent the path of least resistance to enable
communication of human thoughts and emotion in a static medium? Is there
another way? A billion similar question
and convoluted pseudo-philosophical arguments rage in my little noodle.&lt;/p&gt;
&lt;p&gt;At this point, I'm not 100% sure what this headset is really &lt;em&gt;capable
of&lt;/em&gt;. I've watched a handful of YouTube videos and read a white paper or
two and I'm really just getting to the meat of it. One thing is for
sure, I know what I want for Christmas.&lt;/p&gt;
&lt;p&gt;Video Courtesy of ExtremeTech via YouTube&lt;/p&gt;</summary></entry><entry><title>A little JAVA; Overloaded Method</title><link href="http://michaelmartinez.in/a-little-java-overloaded-method.html" rel="alternate"></link><updated>2010-09-21T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-09-21:a-little-java-overloaded-method.html</id><summary type="html">&lt;p&gt;Overloaded methods are handy for situations when you want to pass
parameters in varying ways. I'm sure this is really simple stuff for
veteran Java Jedi's, but it may come in handy for a beginner like
myself. Notice that the name of the method is the same for all three.
The Java complier/runtime is actually smart enough to determine which
one to use. Keep the variable names different unless you plan to use a
"this" reference.... and watch your data types as you may run into an
Ambiguous compile time error.&lt;/p&gt;
&lt;p&gt;The first method passes in three parameters:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;computeNetPay&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;rtePay&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;taxRate&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//var to hold tax amount&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//assign vars&lt;/span&gt;
&lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ratePay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;rateTaxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;taxRate&lt;/span&gt;&lt;span class="o"&gt;;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//calc gross&lt;/span&gt;
&lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ratePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//calc amount to withhold from taxes&lt;/span&gt;
&lt;span class="n"&gt;Withholding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rateTaxes&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Find Net Pay&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This method recieved three parameters and net pay is &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The second passes in two parameters and the third passes in one parameter as you can see from the rest of the code here:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pay&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Hours&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;ratePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;rateTaxes&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;computeNetPay&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;rtePay&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;taxRate&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//var to hold tax amount&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="c1"&gt;//assign vars&lt;/span&gt;
&lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ratePay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;rateTaxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;taxRate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//calc gross&lt;/span&gt;
&lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ratePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//calc amount to withhold from taxes&lt;/span&gt;
&lt;span class="n"&gt;Withholding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rateTaxes&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//Find Net Pay&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This method recieved three parameters and net pay is &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;computeNetPay&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;rtePay&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//assign tax rate&lt;/span&gt;
&lt;span class="n"&gt;rateTaxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.15&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ratePay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rtePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ratePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Withholding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rateTaxes&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This method recieved two parameters and net pay is &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;computeNetPay&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hrs&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;rateTaxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.15&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//assign Pay rate&lt;/span&gt;
&lt;span class="n"&gt;ratePay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.85&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Hours&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ratePay&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Withholding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rateTaxes&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gross&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Withholding&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This method recieved one parameters and net pay is &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Part I: Choosing a programming language...</title><link href="http://michaelmartinez.in/part-i-choosing-a-programming-language.html" rel="alternate"></link><updated>2010-09-20T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-09-20:part-i-choosing-a-programming-language.html</id><summary type="html">&lt;h2&gt;...is a hard thing to do.&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
The choices when it comes to &lt;em&gt;really&lt;/em&gt; learning a programming language
are immense. Before I get to far ahead of myself, I'd like to make sure
you know that I'm talking &lt;em&gt;computer programming languages.&lt;/em&gt; Spoken
languages are beautiful, inspiring and I'd like to learn Chinese.
However, my &lt;a href="http://www.medicalnewstoday.com/articles/60455.php"&gt;neural connections&lt;/a&gt; are maxed out with the two
programming languages I'm learning now, coupled to learning Spanish with
1.0 from our beautiful teacher.&lt;/p&gt;
&lt;p&gt;To solve this problem, if you like learning its not really a "problem"
per se, you need to break it down. There are several factors that make
this decision somewhat difficult to quantify, we'll list them here and
explore them subsequently. The &lt;a href="http://en.wikipedia.org/wiki/Opportunity_cost"&gt;opportunity cost&lt;/a&gt; of learning each
language of interest is probably the single biggest factor
when analyzing this problem. Another major factor is &lt;em&gt;&lt;a href="http://www.starnetdata.com/wp-content/uploads/2010/02/The-Phenomenon-of-Technology-Decay.pdf"&gt;technology
decay&lt;/a&gt;,&lt;/em&gt;while a certain language may be "hot" right now, five years
from now the language may be dead, non-supported or found to have major
weaknesses as technology progresses. The last factor that makes choosing
difficult is the experience level of the person making the decision.&lt;/p&gt;
&lt;p&gt;Opportunity cost is very complex in this problem as the variables that
make up the  equation tend to be diverse and seemingly never-ending.
&lt;strong&gt;Time&lt;/strong&gt; is a huge factor for just about everything and it certainly
plays a role in my decision to learn programming. One, I'm not getting
any younger and my perception is that technology is moving faster and
faster. If I want to become proficient to the point where I can program
anything with the programming language, I need approximately
5000 to&lt;a href="http://www.squidoo.com/10000-hour-rule"&gt;10000 hours&lt;/a&gt; of learning and working with the language
(sprinkle a dash of luck for good measure).&lt;/p&gt;
&lt;p&gt;The ever present "verses" argument goes something like this; Which is
better... C++ vs. Java, Java vs. C#, VB.NET vs. Python, PERL vs. LUA
and so on. I don't know if there is an empirical winner in these battles
as my perception puts these battles squarely in the opinion realm. One
theme I've heard mentioned time and again is; &lt;em&gt;Choose the right tool for
the job!&lt;/em&gt; which is excellent advice for the seasoned developer to be
sure. The not-so-salty beginner still needs to decide which language
they will really concentrate on despite the excellent advice
above because we don't know which tool is right for the job. We can
study other solutions and glean information as to why they did this or
that, but that will only get you so far.&lt;/p&gt;
&lt;p&gt;Technology decay is probably something most people don't see coming
until its too late. When I tell people of the baby boomer age that
I'm studying programming, I generally get this answer; "I remember punch
cards with Fortran back in College." I often wonder what happened to the
person that &lt;em&gt;really&lt;/em&gt; knew Fortran when C and C++ came on the scene. Did
they scoff? Did they embrace the new paradigms? Did they need to do
anything?  Fortran is still in use, albeit relegated to somewhat of a
niche language.  As long as the language has users, the language will
never die... it will just die. We can find many people that still play
with the &lt;a href="http://en.wikipedia.org/wiki/Atari_2600"&gt;Atari 2600&lt;/a&gt;, does that mean the Atari game developers are
earning a livable wage? I don't know for sure, but I would hazard a
guess at NO.&lt;/p&gt;
&lt;p&gt;At the end of the day, my choice boils down to economics and priorities.
I have a family with small children (1.0 and 2.0) who deserve the
ABSOLUTE best I can provide them. In the event that I lose my current
job, I would want to choose and &lt;em&gt;really&lt;/em&gt; learn a language that could
immediately provide a livable wage for my family.&lt;/p&gt;
&lt;p&gt;Let's talk languages... Continued in Part II&lt;/p&gt;</summary></entry><entry><title>Android Super Computer App</title><link href="http://michaelmartinez.in/android-super-computer-app.html" rel="alternate"></link><updated>2010-09-08T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-09-08:android-super-computer-app.html</id><summary type="html">&lt;p&gt;Did you ever wish you had a super computer in your pocket? You know for
those debates at the firehouse; "Dude, I guarantee the human genome is
completely indexable with the touch of a button, guarantee!"&lt;/p&gt;
&lt;p&gt;Thanks to the geniuses at MIT, you could potentially deliver on such a
promise. The &lt;a href="http://web.mit.edu/newsoffice/2010/supercomputer-smart-phones-0901.html"&gt;rbAPPmit&lt;/a&gt; has serious muscle behind the funny little
green fella.&lt;/p&gt;
&lt;p&gt;
&gt; The new software works in cases where the general form of a problem is
&gt; known in advance, but not the particulars. For instance, says Phuong
&gt; Huynh, a postdoc who worked on the project, a computer simulation of
&gt; fluid flow around an obstacle in a pipe could depend on a single
&gt; parameter: the radius of the obstacle. But for a given value of the
&gt; parameter, calculating the fluid flow could take an hour on a
&gt; supercomputer with 500 processing units. The researchers’ new software
&gt; can provide a very good approximation of the same calculation in a
&gt; matter of seconds."

&lt;/p&gt;

&lt;p&gt;A rather complex video explaining some functionality: &lt;a href="http://augustine.mit.edu/methodology/video_clips/rbAPPmit_Feb11_2010_demo3.wmv"&gt;Here&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>App Inventor</title><link href="http://michaelmartinez.in/app-inventor.html" rel="alternate"></link><updated>2010-09-06T00:00:00-07:00</updated><author><name>Michael</name></author><id>tag:michaelmartinez.in,2010-09-06:app-inventor.html</id><summary type="html">&lt;p&gt;&lt;a href="http://appinventor.googlelabs.com/about/"&gt;Google's App Inventor Beta&lt;/a&gt; is an AWESOME program and I'm lucky to be
a part of it. They say it is intended for non-programmers and I agree to
 a certain extent. However, people with programming experience will be
quickly making apps that &lt;em&gt;work&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Anecdotal evidence, my own, from the Google AI discussion board suggests
that people with no programming experience &lt;strong&gt;struggle&lt;/strong&gt;. They struggle
with anything outside of hat was shown them in the&lt;a href="http://appinventor.googlelabs.com/learn/tutorials/index.html"&gt;tutorials&lt;/a&gt;. The
good news is the tutorials are quite comprehensive... the bad news is
the tutorials don't cover a LOT of material.&lt;/p&gt;
&lt;p&gt;The documentation is decent, but lacks depth in many areas. As this beta
progresses, I'm sure we'll see more in the form of documentation...
among other improvements.&lt;/p&gt;
&lt;p&gt;Stay tuned for the apps I'm working on, as I'll post them as they are
complete and ready for download. Cheers.&lt;/p&gt;</summary></entry></feed>